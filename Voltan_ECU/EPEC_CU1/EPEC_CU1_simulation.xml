<?xml version="1.0" encoding="utf-8"?>
<project xmlns:ppx="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" companyURL="" productName="" productVersion="CODESYS V3.5 SP10" creationDateTime="2025-02-24T16:09:32.552285-06:00" />
  <contentHeader name="EPEC_CU1.project" modificationDateTime="2025-02-24T16:09:32.552285-06:00">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addDataInfo />
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="ChannelIDs">
        <baseType>
          <enum>
            <values>
              <value name="Ch1" value="0" />
              <value name="Ch2" />
              <value name="Ch3" />
              <value name="Ch4" />
            </values>
            <baseType>
              <BYTE />
            </baseType>
          </enum>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes xmlns="http://www.plcopen.org/xml/tc6_0200">
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="strict" Value="" />
            </Attributes>
          </data>
        </addData>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!

	This object is created by Epec MultiTool.
	User changes are overwritten when project is imported.

	Content:
	- EventCode channel IDs</xhtml>
        </documentation>
      </dataType>
      <dataType name="DeviceIDs">
        <baseType>
          <enum>
            <values>
              <value name="VoltageInput" value="0" />
              <value name="DigitalInput" />
              <value name="CurrentInput" />
              <value name="ParameterValidation" />
            </values>
            <baseType>
              <BYTE />
            </baseType>
          </enum>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes xmlns="http://www.plcopen.org/xml/tc6_0200">
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="strict" Value="" />
            </Attributes>
          </data>
        </addData>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!

	This object is created by Epec MultiTool.
	User changes are overwritten when project is imported.

	Content:
	- EventCode device IDs</xhtml>
        </documentation>
      </dataType>
      <dataType name="IdentityObject">
        <baseType>
          <struct>
            <variable name="VendorId" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Vendor ID</xhtml>
              </documentation>
            </variable>
            <variable name="ProductCode" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Product code</xhtml>
              </documentation>
            </variable>
            <variable name="Revision" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Revision number</xhtml>
              </documentation>
            </variable>
            <variable name="SerialNumber" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Serial number for control unit</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="NVMemory" pouType="program">
        <interface>
          <inputVars>
            <variable name="i_Initialize" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="o_InitReady" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="o_InitError" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="o_InputError" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="o_ParameterBackupLoaded" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valid OD parameter backup image loaded during init. Note indication requires HWD lib 1.1.3.0.</xhtml>
              </documentation>
            </variable>
            <variable name="o_FastParameterBackupLoaded" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valid fast parameter backup image loaded during init. Note indication requires HWD lib 1.1.3.0.</xhtml>
              </documentation>
            </variable>
            <variable name="o_ODParameterError" fromAppToFw="false">
              <type>
                <derived name="EPEC_PH.ParamHandlerStatus" />
              </type>
              <initialValue>
                <simpleValue value="EPEC_PH.ParamHandlerStatus.NO_ERROR" />
              </initialValue>
            </variable>
            <variable name="o_FastParameterError" fromAppToFw="false">
              <type>
                <derived name="EPEC_PH.ParamHandlerStatus" />
              </type>
              <initialValue>
                <simpleValue value="EPEC_PH.ParamHandlerStatus.NO_ERROR" />
              </initialValue>
            </variable>
            <variable name="o_NVMemError" fromAppToFw="false">
              <type>
                <derived name="EPEC_SYSTEM.SYSTEM_ERROR_CODES" />
              </type>
              <initialValue>
                <simpleValue value="EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK" />
              </initialValue>
            </variable>
            <variable name="o_DM2Error" fromAppToFw="false">
              <type>
                <derived name="EPEC_PH.ParamHandlerStatus" />
              </type>
              <initialValue>
                <simpleValue value="EPEC_PH.ParamHandlerStatus.NO_ERROR" />
              </initialValue>
            </variable>
            <variable name="o_MachineTypeError" fromAppToFw="false">
              <type>
                <derived name="EPEC_PH.ParamHandlerStatus" />
              </type>
              <initialValue>
                <simpleValue value="EPEC_PH.ParamHandlerStatus.NO_ERROR" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Note indication requires HWD lib 1.1.5.0.</xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="parSaveBusy" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="parSaveDone" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="parSaveError" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="authenticated" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes xmlns="http://www.plcopen.org/xml/tc6_0200">
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">              This PRG contains non safety-related code.
              The following attribute is autogenerated. Do not remove.
            </xhtml>
          </documentation>
        </interface>
        <actions />
        <transitions />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF i_Initialize THEN
	EPEC_HWD.NVMem.SetParameterBackup(i_Enable := EPEC_HWD.LibParameters.G_PARAM_BACKUP_IN_USE);

	EPEC_HWD.NVMem.Init(
		i_NVMemoryIndex := 0,
		i_pParametersArea := ADR(G_Common.ParameterArea),
		i_ParameterAreaSize := SIZEOF(G_Common.ParameterArea),
		i_pParameterHandler := ADR(G_Common.ParHandler),
		i_pUserValuesArea := ADR(G_Common.FastParameterArea),
		i_UserValueAreaSize := SIZEOF(G_Common.FastParameterArea),
		i_pUserValueHandler := ADR(G_Common.FastParHandler),
		i_pUserValues := ADR(G_Common.FastParameters),
		i_UserValuesSize := SIZEOF(G_Common.FastParameters),
		i_pDM2Area := 0,
		i_DM2AreaSize := 0,
		i_pDM2Handler := 0,
		i_pMachineTypeArea := DWORD#0,
		i_MachineTypeAreaSize := UDINT#0,
		i_pMachineTypeHandler := DWORD#0,
		i_ParHandlerKeyword := G_CONSTANTS.G_PARAMHANDLERKEYWORD,
		o_InitReady =&gt; o_InitReady,
	);
	// Check if backup images were loaded during initialization
	IF o_InitReady THEN
		EPEC_HWD.NVMem.IsBackupLoaded(
			o_ParameterBackupLoaded =&gt; o_ParameterBackupLoaded,
			o_UserValueBackupLoaded =&gt; o_FastParameterBackupLoaded
		);
	END_IF
ELSE

	EPEC_HWD.NVMem(
		i_WriteParameters := G_Common.ParHandler.o_ParametersChanged,
		i_WriteUserValues := G_Common.SaveFastParameters,
		i_WriteDM2 := FALSE,
		i_WriteMachineType := FALSE,
		i_Authentication := authenticated,
		o_InitError =&gt; o_InitError,
		o_InputError =&gt; o_InputError,
		o_ParameterError =&gt; o_ODParameterError,
		o_UserValueError =&gt; o_FastParameterError,
		o_DM2Error =&gt; o_DM2Error,
		o_MachineTypeError =&gt; o_MachineTypeError,
		o_NVMemError =&gt; o_NVMemError,
		o_ParSaveBusy =&gt; parSaveBusy,
		o_ParSaveDone =&gt; parSaveDone,
		o_ParSaveError =&gt; parSaveError
	);

    (* Set parameter save status value *)
	IF parSaveBusy THEN
		G_CAN1_VAR.ParameterSaveStatus:= G_CONSTANTS.G_PARAMETER_SAVE_STATUS_IN_PROGRESS; 
	ELSIF parSaveDone THEN
		G_CAN1_VAR.ParameterSaveStatus:= G_CONSTANTS.G_PARAMETER_SAVE_STATUS_DONE; 
	ELSIF parSaveError THEN
		G_CAN1_VAR.ParameterSaveStatus:= G_CONSTANTS.G_PARAMETER_SAVE_STATUS_ERROR; 
	END_IF

	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.NVRAM_INIT, i_LibraryErrorCode:= BOOL_TO_DINT(o_InitError), i_Info1:= 0, i_Info2:= 0);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.NVRAM_INPUT, i_LibraryErrorCode:= BOOL_TO_DINT(o_InputError), i_Info1:= 0, i_Info2:= 0);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.NVRAM_FW, i_LibraryErrorCode:= o_NVMemError, i_Info1:= 0, i_Info2:= 0);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.NVRAM_OD, i_LibraryErrorCode:= INT_TO_DINT(o_ODParameterError), i_Info1:= 0, i_Info2:= 0);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.NVRAM_FASTPAR, i_LibraryErrorCode:= INT_TO_DINT(o_FastParameterError), i_Info1:= 0, i_Info2:= 0);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.NVRAM_MACHINETYPE, i_LibraryErrorCode:= INT_TO_DINT(o_MachineTypeError), i_Info1:= 0, i_Info2:= 0);


    (* User value save triggered, reset trigger *)
    G_Common.SaveFastParameters := FALSE;
END_IF
            </xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties xmlns="http://www.plcopen.org/xml/tc6_0200">
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
        </addData>
      </pou>
      <pou name="PLC_PRG" pouType="program">
        <interface>
          <inputVars />
          <outputVars>
            <variable name="o_InitDone" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </outputVars>
          <localVars>
            <variable name="ControlLED" fromAppToFw="false">
              <type>
                <derived name="EPEC_HWD.DiagnosticLED" />
              </type>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes xmlns="http://www.plcopen.org/xml/tc6_0200">
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
Tool version       : '8.1.9098.589'  (MultiTool build version)
Xml version        : '1.0.10'  (MultiTool xml file version)
Control Unit       : 'EPEC_CU1'  (Name of the unit in MultiTool)
Control Unit Type  : 'EC44-020'  (Type of the unit in MultiTool, including the functional version)
CODESYS Profile    : 'CODESYS V3.5 SP10'  (CODESYS profile that was selected in MultiTool)
Device Description Version: '3.5.13.67'  (Device description version that was selected in MultiTool)
Export Time        : '24.02.2025 16:09.32'  (Date and time when exported from MultiTool)
Export Path        : 'C:\Users\Pierre-Louis\Documents\02-UACH\1-Projets\1-Voltan\02-Réalisation\DEV\Projet_Voltan\Voltan_ECU\EPEC_CU1'  (Path where MultiTool exported)
Project File       : 'C:\Users\Pierre-Louis\Documents\02-UACH\1-Projets\1-Voltan\02-Réalisation\DEV\Projet_Voltan\Voltan_ECU\Voltan_ECU.mtproject'  (MultiTool project file name that was used)
</xhtml>
          </documentation>
        </interface>
        <actions />
        <transitions />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// Initialize application log
IF NOT G_Logs.AppLogInitOK THEN
	G_Logs.AppLogInitOK := EPEC_SERRLOG.S_InitErrorLog(i_pErrorLog:= ADR(G_Logs.ApplicationLog));
END_IF

IF NOT o_InitDone AND G_Logs.AppLogInitOK THEN

    (* Code template non-safe FB initializations *)
    IF NOT Init_Entry.o_Ready THEN
        Init_Entry();
    ELSIF NOT Init_IO.o_Ready THEN
        Init_IO();
    ELSIF NOT EPEC_SHWD.S_EC44_Diagnostic.S_o_InitReady THEN
        EPEC_SHWD.S_EC44_Diagnostic.Init(
            S_i_SupplyVoltageHighLimit := G_CONSTANTS.DIAG_SUPPLY_VOLTAGE_HIGH_LIMIT,
            S_i_SupplyVoltageLowLimit := G_CONSTANTS.DIAG_SUPPLY_VOLTAGE_LOW_LIMIT,
            S_i_SupplyVoltageDiagDelay := G_CONSTANTS.DIAG_SUPPLY_VOLTAGE_DELAY,
            S_i_RefControlType5V := G_CONSTANTS.DIAG_REF_TYPE_5V,
            S_i_RefControlDiagDelay := G_CONSTANTS.DIAG_REF_DELAY,
            S_i_OutputGroup1HighVoltage := G_CONSTANTS.DIAG_OUTPUT_GROUP1_HIGH_LIMIT,
            S_i_OutputGroup1LowVoltage:= G_CONSTANTS.DIAG_OUTPUT_GROUP1_LOW_LIMIT,
            S_i_OutputGroup1DiagDelay:= G_CONSTANTS.DIAG_OUTPUT_GROUP1_DELAY,
            S_i_5VANHighVoltage:= G_CONSTANTS.DIAG_5V_VAN_HIGH_LIMIT,
            S_i_5VANLowVoltage:= G_CONSTANTS.DIAG_5V_VAN_LOW_LIMIT,
            S_i_5VANDiagDelay:= G_CONSTANTS.DIAG_5V_VAN_DELAY,
            S_i_TemperatureHighLimit:= G_CONSTANTS.DIAG_TEMP_HIGH_LIMIT,
            S_i_TemperatureLowLimit:= G_CONSTANTS.DIAG_TEMP_LOW_LIMIT,
            S_i_TemperatureDiagDelay:= G_CONSTANTS.DIAG_TEMP_DELAY);

    ELSIF NOT NVMemory.o_InitReady THEN
        NVMemory(i_Initialize:=TRUE);
	ELSIF NOT Inputs.o_InitReady THEN
		Inputs(i_Initialize:=TRUE);
	ELSIF NOT Init_CAN.o_Ready THEN
		Init_CAN();
	ELSIF NOT Init_CANopen_CAN1.o_Ready THEN
		Init_CANopen_CAN1();

    ELSE
        (* User non-safe initialization *)
        MainInit(o_MainInitReady=&gt;o_InitDone);
    END_IF
ELSE
    (* Non-safe actions to execute before non-safe main program *)
	G_CAN.Channel1.CheckMessages();
	G_CAN.Channel2.CheckMessages();
	Inputs(i_Initialize:=FALSE);
	Handle_CANopen_CAN1();


    EPEC_SHWD.S_EC44_Diagnostic(
        i_RefChannel1  := Inputs.o_AI_REF_OUTPUT_MAIN_Diagnostic,
        i_SupplyVoltageInPin := Inputs.o_VIN_1_1_Diagnostic,
        i_SupplyBeforeSafetySwitch1 := Inputs.o_AI_POWER1_SUPPLY_Diagnostic,
        i_SupplyAfterSafetySwitch1  := Inputs.o_AI_POWER1_OUTPUT_Diagnostic,
        i_5VANChannel1 := Inputs.o_AI_5VAN_Diagnostic,
        i_PCBTemperatureChannel1 := Inputs.o_TEMP_PCB_MAIN_Diagnostic,
        i_PCBTemperatureChannel2 := Inputs.o_TEMP_PCB_RED_Diagnostic,
        i_MCUTemperature := Inputs.o_TEMP_MCU_Diagnostic,
        i_SBCTemperature := Inputs.o_AI_SBC_TEMP_Diagnostic
    );

	Handle_Diagnostic();

	// Read latest firmware errors to application log when FW is in error state
	IF EPEC_SHWD.S_EC44_Diagnostic.S_o_FWDiagnosticTaskStatus = EPEC_IODRV.DIAGNOSTIC_TASK_STATUS.EDiagnosticStatusError THEN
		Handle_Firmware_Errors(i_ReadErrors:= TRUE);
	END_IF


    (* User non-safe main program *)
    Main();

    (* Non-safe actions to execute after non-safe main program *)

    NVMemory(i_Initialize:=FALSE);

    (* Boot application if NMT reset requested *)
    IF G_StatusFlags.CANopenCan1NMTResetRequest OR G_StatusFlags.CANopenCan2NMTResetRequest THEN
        EPEC_SYSTEM.BOOT_APPLICATION_KILL_RTS();
    END_IF
END_IF

ControlLED(
    i_InitState := NOT PLC_PRG.o_Initdone,
    i_ApplicationInSafeState := NOT EPEC_SHWD.S_EC44_Diagnostic.S_o_OutputGroup1Control,
    i_SystemOk := G_StatusFlags.SystemOk,
    i_CustomLEDControl := G_StatusFlags.CustomLEDControlEnable,
    i_RedLED := G_StatusFlags.RedLED,
    i_GreenLED := G_StatusFlags.GreenLED,
    i_BlueLED := G_StatusFlags.BlueLED,
    o_Error =&gt;
);


              </xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties xmlns="http://www.plcopen.org/xml/tc6_0200">
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
        </addData>
      </pou>
      <pou name="Init_CAN" pouType="program">
        <interface>
          <inputVars />
          <outputVars>
            <variable name="o_Ready" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="o_Error" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="o_CAN1InitError" fromAppToFw="false">
              <type>
                <derived name="EPEC_CANVXD.ERROR" />
              </type>
              <initialValue>
                <simpleValue value="EPEC_CANVXD.ERROR.CHANNEL_NOT_INITIALIZED" />
              </initialValue>
            </variable>
            <variable name="o_CAN2InitError" fromAppToFw="false">
              <type>
                <derived name="EPEC_CANVXD.ERROR" />
              </type>
              <initialValue>
                <simpleValue value="EPEC_CANVXD.ERROR.CHANNEL_NOT_INITIALIZED" />
              </initialValue>
            </variable>
          </outputVars>
          <localVars />
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - Initialization of CAN channels

 This PRG contains non safety-related code.
 The following attribute is autogenerated. Do not remove.

</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">o_CAN1InitError := G_CAN.Channel1.InitCAN(i_Channel := 0, i_BitRate := G_SystemInfo.CAN1_Comms[3], i_Flags := 0);
o_CAN2InitError := G_CAN.Channel2.InitCAN(i_Channel := 1, i_BitRate := EPEC_CANVXD.BITRATE_250K, i_Flags := 0);

IF EPEC_CANVXD.ERROR.NO_ERROR = o_CAN1InitError AND
	EPEC_CANVXD.ERROR.NO_ERROR = o_CAN2InitError THEN
	o_Error := FALSE;
ELSE
	o_Error := TRUE;

	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CAN_INIT, i_LibraryErrorCode:= INT_TO_DINT(o_CAN1InitError), i_Info1:= 0, i_Info2:= 1);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CAN_INIT, i_LibraryErrorCode:= INT_TO_DINT(o_CAN2InitError), i_Info1:= 0, i_Info2:= 2);
END_IF

o_Ready := TRUE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties>
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/sil2objectproperties" handleUnknown="implementation">
            <SIL2ObjectProperties>
              <IsNonSafePRG>true</IsNonSafePRG>
            </SIL2ObjectProperties>
          </data>
        </addData>
      </pou>
      <pou name="Init_Entry" pouType="program">
        <interface>
          <inputVars />
          <outputVars>
            <variable name="o_Ready" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
          </outputVars>
          <localVars>
            <variable name="Can2NodeId" fromAppToFw="false">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="Can2PLCopenNodeId" fromAppToFw="false">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="Can2BitRate" fromAppToFw="false">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="ReadBytes" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="RandomNumber" fromAppToFw="false">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="SystemParameters" fromAppToFw="false">
              <type>
                <derived name="EPEC_HW.SystemParameters" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - Set system information common for all ODs.

 This PRG contains non safety-related code.
 The following attribute is autogenerated. Do not remove.

</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">SystemParameters.ReadData();

/// 16#1008: Manufacturer device name
EPEC_SYSTEM.SystemParametersRead (16#1008,0,79,ADR(G_SystemInfo.DeviceName),ADR(ReadBytes));
 /// 16#1009: Manufacturer hardware version
EPEC_SYSTEM.SystemParametersRead (16#1009,0,79,ADR(G_SystemInfo.HWVersion),ADR(ReadBytes));
/// 16#100A: Manufacturer software version
G_SystemInfo.SWVersion := SystemParameters.o_SoftwareVersion;
/// 16#1018: Identity object 
G_SystemInfo.Identity.VendorId := SystemParameters.o_VendorId;          /// Vendor ID
G_SystemInfo.Identity.ProductCode := SystemParameters.o_ProductCode;    /// Product code
G_SystemInfo.Identity.Revision := SystemParameters.o_RevisionNumber;    /// Revision number
G_SystemInfo.Identity.SerialNumber := SystemParameters.o_SerialNumber;  /// Serial number for control unit
/// 16#2030 Codesys version
G_SystemInfo.ToolsVersion[1] := DWORD#50659328;
/// 16#2150 CAN 1 Communication parameters
G_SystemInfo.CAN1_Comms := SystemParameters.i_CAN1;

/// Read parameters for CAN2 from firmware
EPEC_SYSTEM.SystemParametersRead (16#2151,2,2,ADR(Can2NodeId),ADR(ReadBytes));
EPEC_SYSTEM.SystemParametersRead (16#2151,3,2,ADR(Can2BitRate),ADR(ReadBytes));
EPEC_SYSTEM.SystemParametersRead (16#2151,10,2,ADR(Can2PLCopenNodeId),ADR(ReadBytes));

/// Set variables to communication arrays 
G_SystemInfo.CAN2_Comms[2] := Can2NodeId;
G_SystemInfo.CAN2_Comms[3] := Can2BitRate;
G_SystemInfo.CAN2_Comms[10] := Can2PLCopenNodeId;

o_Ready:= TRUE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties>
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/sil2objectproperties" handleUnknown="implementation">
            <SIL2ObjectProperties>
              <IsNonSafePRG>true</IsNonSafePRG>
            </SIL2ObjectProperties>
          </data>
        </addData>
      </pou>
      <pou name="Handle_Diagnostic" pouType="program">
        <interface>
          <inputVars />
          <outputVars />
          <localVars />
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - Non-safe system status update

 This PRG contains non safety-related code.
 The following attribute is autogenerated. Do not remove.

</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* System Ok conditions *)
G_StatusFlags.SystemOk:=
		EPEC_SHWD.S_EC44_Diagnostic.S_o_DiagStatusOk AND			(* System diagnostic ok *)
		NOT Init_CAN.o_Error AND			(* No errors in bus init *)
		NOT Init_CANopen_CAN1.o_Error;


// Check HW diagnostic errors when diagnostic is enabled
IF EPEC_SHWD.S_EC44_Diagnostic.S_o_Running AND NOT EPEC_SHWD.S_EC44_Diagnostic.S_o_DiagStatusOk THEN
	EPEC_SERRLOG.S_AddError_DWORD(
		i_ErrorCode := ApplicationErrors.HW_DIAGNOSTIC_FAULT,
		i_LibraryErrorCode := EPEC_SERRLOG.LibConstants.G_ErrorNA,
		i_Info1 := 0,
		i_Info2 := 0);

	// output group 1
	EPEC_SERRLOG.S_AddError_BYTE(
		i_ErrorCode := ApplicationErrors.HW_DIAG_OUT_PWR_GRP_1,
		i_LibraryErrorCode := EPEC_SHWD.S_EC44_Diagnostic.o_OutputGroup1Control_EC.EventID,
		i_Info1 := EPEC_SHWD.S_EC44_Diagnostic.o_OutputGroup1Control_EC.FunctionID,
		i_Info2 := EPEC_SHWD.S_EC44_Diagnostic.o_OutputGroup1Control_EC.DeviceID,
		i_Info3 := EPEC_SHWD.S_EC44_Diagnostic.o_OutputGroup1Control_EC.ChannelID,
		i_Info4 := 0,
		i_Info5 := 0,
		i_Info6 := 0,
		i_Info7 := 0,
		i_Info8 := 0);

	// REF output
	EPEC_SERRLOG.S_AddError_BYTE(
		i_ErrorCode := ApplicationErrors.HW_DIAG_OUT_REF_1,
		i_LibraryErrorCode := EPEC_SHWD.S_EC44_Diagnostic.o_RefControl_EC.EventID,
		i_Info1 := EPEC_SHWD.S_EC44_Diagnostic.o_RefControl_EC.FunctionID,
		i_Info2 := EPEC_SHWD.S_EC44_Diagnostic.o_RefControl_EC.DeviceID,
		i_Info3 := EPEC_SHWD.S_EC44_Diagnostic.o_RefControl_EC.ChannelID,
		i_Info4 := 0,
		i_Info5 := 0,
		i_Info6 := 0,
		i_Info7 := 0,
		i_Info8 := 0);

	// supply voltage
	EPEC_SERRLOG.S_AddError_BYTE(
		i_ErrorCode := ApplicationErrors.HW_DIAG_IN_SUPPLY,
		i_LibraryErrorCode := EPEC_SHWD.S_EC44_Diagnostic.o_SupplyVoltag_EC.EventID,
		i_Info1 := EPEC_SHWD.S_EC44_Diagnostic.o_SupplyVoltag_EC.FunctionID,
		i_Info2 := EPEC_SHWD.S_EC44_Diagnostic.o_SupplyVoltag_EC.DeviceID,
		i_Info3 := EPEC_SHWD.S_EC44_Diagnostic.o_SupplyVoltag_EC.ChannelID,
		i_Info4 := 0,
		i_Info5 := 0,
		i_Info6 := 0,
		i_Info7 := 0,
		i_Info8 := 0);

	// 5VAN
	EPEC_SERRLOG.S_AddError_BYTE(
		i_ErrorCode := ApplicationErrors.HW_DIAG_IN_5VAN,
		i_LibraryErrorCode := EPEC_SHWD.S_EC44_Diagnostic.o_5VAN_EC.EventID,
		i_Info1 := EPEC_SHWD.S_EC44_Diagnostic.o_5VAN_EC.FunctionID,
		i_Info2 := EPEC_SHWD.S_EC44_Diagnostic.o_5VAN_EC.DeviceID,
		i_Info3 := EPEC_SHWD.S_EC44_Diagnostic.o_5VAN_EC.ChannelID,
		i_Info4 := 0,
		i_Info5 := 0,
		i_Info6 := 0,
		i_Info7 := 0,
		i_Info8 := 0);

	// MCU temperature
	EPEC_SERRLOG.S_AddError_BYTE(
		i_ErrorCode := ApplicationErrors.HW_DIAG_IN_MCU_TEMP,
		i_LibraryErrorCode := EPEC_SHWD.S_EC44_Diagnostic.o_MCUTemperatureEC.EventID,
		i_Info1 := EPEC_SHWD.S_EC44_Diagnostic.o_MCUTemperatureEC.FunctionID,
		i_Info2 := EPEC_SHWD.S_EC44_Diagnostic.o_MCUTemperatureEC.DeviceID,
		i_Info3 := EPEC_SHWD.S_EC44_Diagnostic.o_MCUTemperatureEC.ChannelID,
		i_Info4 := 0,
		i_Info5 := 0,
		i_Info6 := 0,
		i_Info7 := 0,
		i_Info8 := 0);

	// SBC temperature
	EPEC_SERRLOG.S_AddError_BYTE(
		i_ErrorCode := ApplicationErrors.HW_DIAG_IN_SBC_TEMP,
		i_LibraryErrorCode := EPEC_SHWD.S_EC44_Diagnostic.o_SBCTemperatureEC.EventID,
		i_Info1 := EPEC_SHWD.S_EC44_Diagnostic.o_SBCTemperatureEC.FunctionID,
		i_Info2 := EPEC_SHWD.S_EC44_Diagnostic.o_SBCTemperatureEC.DeviceID,
		i_Info3 := EPEC_SHWD.S_EC44_Diagnostic.o_SBCTemperatureEC.ChannelID,
		i_Info4 := 0,
		i_Info5 := 0,
		i_Info6 := 0,
		i_Info7 := 0,
		i_Info8 := 0);

	// PCB temperature 1
	EPEC_SERRLOG.S_AddError_BYTE(
		i_ErrorCode := ApplicationErrors.HW_DIAG_IN_PCB_TEMP_1,
		i_LibraryErrorCode := EPEC_SHWD.S_EC44_Diagnostic.o_PCBTemperatureCh1_EC.EventID,
		i_Info1 := EPEC_SHWD.S_EC44_Diagnostic.o_PCBTemperatureCh1_EC.FunctionID,
		i_Info2 := EPEC_SHWD.S_EC44_Diagnostic.o_PCBTemperatureCh1_EC.DeviceID,
		i_Info3 := EPEC_SHWD.S_EC44_Diagnostic.o_PCBTemperatureCh1_EC.ChannelID,
		i_Info4 := 0,
		i_Info5 := 0,
		i_Info6 := 0,
		i_Info7 := 0,
		i_Info8 := 0);

	// PCB temperature 2
	EPEC_SERRLOG.S_AddError_BYTE(
		i_ErrorCode := ApplicationErrors.HW_DIAG_IN_PCB_TEMP_2,
		i_LibraryErrorCode := EPEC_SHWD.S_EC44_Diagnostic.o_PCBTemperatureCh2_EC.EventID,
		i_Info1 := EPEC_SHWD.S_EC44_Diagnostic.o_PCBTemperatureCh2_EC.FunctionID,
		i_Info2 := EPEC_SHWD.S_EC44_Diagnostic.o_PCBTemperatureCh2_EC.DeviceID,
		i_Info3 := EPEC_SHWD.S_EC44_Diagnostic.o_PCBTemperatureCh2_EC.ChannelID,
		i_Info4 := 0,
		i_Info5 := 0,
		i_Info6 := 0,
		i_Info7 := 0,
		i_Info8 := 0);

END_IF


</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties>
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/sil2objectproperties" handleUnknown="implementation">
            <SIL2ObjectProperties>
              <IsNonSafePRG>true</IsNonSafePRG>
            </SIL2ObjectProperties>
          </data>
        </addData>
      </pou>
      <pou name="Handle_Firmware_Errors" pouType="program">
        <interface>
          <inputVars>
            <variable name="i_ReadErrors" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars />
          <localVars>
            <variable name="readErrorsOld" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="fw_entries" fromAppToFw="false">
              <type>
                <derived name="ARRAY [1..EPEC_SERRLOG.LibParameters.G_ERROR_LOG_MAX_LINES] OF EPEC_SYSTEM.SystemLogEntry" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="return_code" fromAppToFw="false">
              <type>
                <derived name="EPEC_SYSTEM.SYSTEM_ERROR_CODES" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="lines_found" fromAppToFw="false">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="i" fromAppToFw="false">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="previous_time" fromAppToFw="false">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="boot_detected" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="fw_log_startupid" fromAppToFw="false">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="UDINT#0" />
              </initialValue>
            </variable>
            <variable name="fw_log_startupid_exist" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="fw_log_startupid_size" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - Reads firmware error codes to application error log

 This PRG contains non safety-related code.
 The following attribute is autogenerated. Do not remove.

</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF i_ReadErrors AND NOT readErrorsOld THEN
	// Read FW log startup id value, if supported by FW
	return_code := EPEC_SYSTEM.SystemParametersRead(i_Index:=16#2039, i_SubIndex:=2, i_pBufferSize:=SIZEOF(fw_log_startupid), i_pBuffer:=ADR(fw_log_startupid), i_pNbrOfReadByte:=ADR(fw_log_startupid_size));

	// Check if read was success
	IF return_code = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
		fw_log_startupid_exist := TRUE;
	ELSE
		fw_log_startupid_exist := FALSE;
	END_IF

	// Read firmware errors
	return_code:= EPEC_SYSTEM.GetFWLogTail(
		i_Count:= EPEC_SERRLOG.LibParameters.G_ERROR_LOG_MAX_LINES,
		i_logEntryArray:= ADR(fw_entries),
		o_Found =&gt; lines_found
	);

	IF return_code = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK AND lines_found &gt; UDINT#0 THEN
		// Check if startup id is supported by FW
		IF fw_log_startupid_exist THEN
			// Add errors from buffer until startup id is found 
			FOR i:= 1 TO EPEC_SERRLOG.LibParameters.G_ERROR_LOG_MAX_LINES DO
				IF i &lt;= lines_found AND fw_entries[i].Identifier &gt;= fw_log_startupid THEN
					S_AddError_DWORD(
						i_ErrorCode:= ApplicationErrors.FW_ERROR,
						i_LibraryErrorCode:= fw_entries[i].Error,
						i_Info1:= fw_entries[i].Info,
						i_Info2:= fw_entries[i].Identifier);
				END_IF
			END_FOR
		ELSE
			// Add first error
			S_AddError_DWORD(
				i_ErrorCode:= ApplicationErrors.FW_ERROR,
				i_LibraryErrorCode:= fw_entries[1].Error,
				i_Info1:= fw_entries[1].Info,
				i_Info2:= fw_entries[1].Identifier);

			previous_time:= fw_entries[1].Timestamp;
			boot_detected:= FALSE;

			// Add errors until timestamp rollover is detected
			FOR i:= 2 TO EPEC_SERRLOG.LibParameters.G_ERROR_LOG_MAX_LINES DO
				IF i &lt;= lines_found AND fw_entries[i].Timestamp &lt;= previous_time AND NOT boot_detected THEN
					S_AddError_DWORD(
						i_ErrorCode:= ApplicationErrors.FW_ERROR,
						i_LibraryErrorCode:= fw_entries[i].Error,
						i_Info1:= fw_entries[i].Info,
						i_Info2:= fw_entries[i].Identifier);

					previous_time:= fw_entries[i].Timestamp;

				ELSIF fw_entries[i].Timestamp &gt; previous_time THEN
					boot_detected := TRUE;
				END_IF
			END_FOR
		END_IF
	END_IF
END_IF
readErrorsOld:= i_ReadErrors;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties>
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/sil2objectproperties" handleUnknown="implementation">
            <SIL2ObjectProperties>
              <IsNonSafePRG>true</IsNonSafePRG>
            </SIL2ObjectProperties>
          </data>
        </addData>
      </pou>
      <pou name="Init_CANopen_CAN1" pouType="program">
        <interface>
          <inputVars />
          <outputVars>
            <variable name="o_Ready" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="o_Error" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </outputVars>
          <localVars />
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - CANopen initialization
 - Includes Init_CANopen_OD1
 - CANopen data update

 This PRG contains non safety-related code.
 The following attribute is autogenerated. Do not remove.

</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">G_CANopen_CAN1.Device.itfCanChannel:=G_CAN.Channel1; (*Connect device to can channel*)
G_CANopen_CAN1.Device.NodeID := BYTE#1;
G_CANopen_CAN1.NMT.NmtState:=EPEC_CANopen.NMTState.BootUp; (* Set NMT status to BOOTUP *)

(*Initialize OD's data structures*)
G_CANopen_CAN1.OD.EntryCount:=SIZEOF(G_CANopen_CAN1.ODEntrys)/SIZEOF(G_CANopen_CAN1.ODEntrys[1]); (*Max entries of given OD(CANopenDeviceODEntrys array)*)
G_CANopen_CAN1.OD.InOrder:=FALSE; (*OD isn't in order*)
G_CANopen_CAN1.OD.NextFree:=0; (*OD does not have any entries yet*)
G_CANopen_CAN1.OD.pODEntry:=ADR(G_CANopen_CAN1.ODEntrys); (*Pointer to OD array*)

(*Define NMT protocol*)
G_CANopen_CAN1.Protocols[1].Protocol:=EPEC_CANopen.ProtocolType.NMT;
G_CANopen_CAN1.Protocols[1].pData:=ADR(G_CANopen_CAN1.NMT);
G_CANopen_CAN1.Protocols[1].itfProtocol:=G_CANopen_CAN1.NMT_Handler;
G_CANopen_CAN1.Protocols[1].pError:=ADR(G_CANopen_CAN1_VAR.NMT_Error);
G_CANopen_CAN1_VAR.ProtocolAdded[1] := CANopenDeviceAddProtocol( (* Add to protocol stack *)
	i_pDevice:=ADR(G_CANopen_CAN1.Device),
	i_pProtocol:=ADR(G_CANopen_CAN1.Protocols[1]),
);

(*Initialize NMT protocol*)
IF G_CANopen_CAN1_VAR.ProtocolAdded[1] THEN
	G_CANopen_CAN1.NMT_Handler.Init(
		i_pDevice := ADR(G_CANopen_CAN1.Device),
		i_ThisIsMaster := FALSE,
		i_StartInterval :=  1000,
		i_pMonitoredNodes := 0,
		i_NumberOfNodes := 0,
		i_SimultaneousSlaveConfiguration := FALSE,
		o_Error =&gt; G_CANopen_CAN1_VAR.NMT_Error
	);
ELSE
	G_CANopen_CAN1_VAR.NMT_Error := EPEC_CANopen.Errors.ProtocolDataMissing;
END_IF

(*Define OD protocol*)
G_CANopen_CAN1.Protocols[2].Protocol:=EPEC_CANopen.ProtocolType.OD;
G_CANopen_CAN1.Protocols[2].pData:=ADR(G_CANopen_CAN1.OD);
G_CANopen_CAN1.Protocols[2].pError:=ADR(G_CANopen_CAN1_VAR.OD_Error);
G_CANopen_CAN1_VAR.ProtocolAdded[2] := CANopenDeviceAddProtocol( (* Add to protocol stack *)
	i_pDevice:=ADR(G_CANopen_CAN1.Device),
	i_pProtocol:=ADR(G_CANopen_CAN1.Protocols[2]),
);
IF NOT G_CANopen_CAN1_VAR.ProtocolAdded[2] THEN
	G_CANopen_CAN1_VAR.OD_Error := EPEC_CANopen.Errors.ProtocolDataMissing;
END_IF

(*Define HB protocol
- Uses NMT and OD protocol data, thus need to be defined after them.
*)
G_CANopen_CAN1.HB.HeartBeat.PT := T#200MS; (* HB producer time *)

G_CANopen_CAN1.Protocols[3].Protocol:=EPEC_CANopen.ProtocolType.HB;
G_CANopen_CAN1.Protocols[3].pData:=ADR(G_CANopen_CAN1.HB);
G_CANopen_CAN1.Protocols[3].itfProtocol:=G_CANopen_CAN1.HB_Handler;
G_CANopen_CAN1.Protocols[3].pError:=ADR(G_CANopen_CAN1_VAR.HB_Error);
G_CANopen_CAN1_VAR.ProtocolAdded[3] := CANopenDeviceAddProtocol( (* Add to protocol stack *)
	i_pDevice:=ADR(G_CANopen_CAN1.Device),
	i_pProtocol:=ADR(G_CANopen_CAN1.Protocols[3]),
);

(* Initialize HB protocol *)
IF G_CANopen_CAN1_VAR.ProtocolAdded[3] THEN

	(* Add monitored nodes *)
	G_CANopen_CAN1.HB_Handler.Init(
		i_pDevice := ADR(G_CANopen_CAN1.Device),
		o_Error =&gt; G_CANopen_CAN1_VAR.HB_Error
	);
ELSE
	G_CANopen_CAN1_VAR.HB_Error := EPEC_CANopen.Errors.ProtocolDataMissing;
END_IF

(*Define SSDO protocol*)
G_CANopen_CAN1.Protocols[4].Protocol:=EPEC_CANopen.ProtocolType.SSDO;
G_CANopen_CAN1.Protocols[4].pData:=ADR(G_CANopen_CAN1.SSDO);
G_CANopen_CAN1.Protocols[4].itfProtocol:=G_CANopen_CAN1.SSDO_Handler;
G_CANopen_CAN1.Protocols[4].pError:=ADR(G_CANopen_CAN1_VAR.SSDO_Error);
G_CANopen_CAN1_VAR.ProtocolAdded[4] := CANopenDeviceAddProtocol( (* Add to protocol stack *)
	i_pDevice:=ADR(G_CANopen_CAN1.Device),
	i_pProtocol:=ADR(G_CANopen_CAN1.Protocols[4])
);
IF G_CANopen_CAN1_VAR.ProtocolAdded[4] THEN
	G_CANopen_CAN1.SSDO_Handler.Init(
		i_pDevice := ADR(G_CANopen_CAN1.Device),
		o_Error =&gt; G_CANopen_CAN1_VAR.SSDO_Error
	);
ELSE
	G_CANopen_CAN1_VAR.SSDO_Error := EPEC_CANopen.Errors.ProtocolDataMissing;
END_IF

(*Define GFC protocol*)
G_CANopen_CAN1.Protocols[5].Protocol:=EPEC_CANopen.ProtocolType.GFC;
G_CANopen_CAN1.Protocols[5].pData:=ADR(G_CANopen_CAN1.GFC);
G_CANopen_CAN1.Protocols[5].itfProtocol:=G_CANopen_CAN1.GFC_Handler;
G_CANopen_CAN1.Protocols[5].pError:=ADR(G_CANopen_CAN1_VAR.GFC_Error);
G_CANopen_CAN1_VAR.ProtocolAdded[5] := CANopenDeviceAddProtocol(  (* Add to protocol stack *)
	i_pDevice:=ADR(G_CANopen_CAN1.Device),
	i_pProtocol:=ADR(G_CANopen_CAN1.Protocols[5])
);
IF G_CANopen_CAN1_VAR.ProtocolAdded[5] THEN
	G_CANopen_CAN1.GFC_Handler.Init(
		i_pDevice := ADR(G_CANopen_CAN1.Device),
		i_pStatus:=ADR(G_CANopen_CAN1_VAR.GFC_Status),
		o_Error =&gt; G_CANopen_CAN1_VAR.GFC_Error
	);
ELSE
	G_CANopen_CAN1_VAR.GFC_Error := EPEC_CANopen.Errors.ProtocolDataMissing;
END_IF

(* Init CSDO instance array for bus *)
EPEC_CANopen.CANopenSDOManager.Init(
	i_pDevice:=ADR(G_CANopen_CAN1.Device),
	i_pCsdoArrayStart:=ADR(G_CANopen_CAN1.CSDOS),
	i_CsdoArraySize:=SIZEOF(G_CANopen_CAN1.CSDOS)/SIZEOF(G_CANopen_CAN1.CSDOS[1]),
	o_Error=&gt;G_CANopen_CAN1_VAR.CSDO_Error
);

(* Add index data to OD *)
Init_CANopen_OD1(); (* Must be done before initing PDOs and SRDOs. *)

(*Initialize OD save*)
G_CANopen_CAN1.SaveAll.Init(i_pParamHandler:=ADR(G_Common.ParHandler));
G_CANopen_CAN1.DeleteAll.Init(i_pParamHandler:=ADR(G_Common.ParHandler));
G_CANopen_CAN1.SaveSubData1010h.pSaveSigns := ADR(G_CANopen_CAN1_VAR.SaveSigns1010[0]);
G_CANopen_CAN1.SaveSubData1010h.NumOfEntrys := 4;
G_CANopen_CAN1.SaveSubData1010h.pSaveIndexData := ADR(G_CANopen_CAN1.SaveData[0]);
G_CANopen_CAN1.SaveData[3].itfSaveAll := G_CANopen_CAN1.SaveAll;
G_CANopen_CAN1.SaveData[3].itfDeleteAll := G_CANopen_CAN1.DeleteAll;
G_CANopen_CAN1.OD.pAdditionalData := ADR(G_CANopen_CAN1.SaveSubData1010h);

IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1.Initialize(i_pOD:=ADR(G_CANopen_CAN1.OD), i_pParamHandler:=ADR(G_Common.ParHandler), o_Error =&gt; G_CANopen_CAN1_VAR.ODSave_Error);
END_IF

(* Check all protocol init status flags *)
IF G_CANopen_CAN1_VAR.NMT_Error = EPEC_CANopen.Errors.NoError AND
	G_CANopen_CAN1_VAR.SSDO_Error = EPEC_CANopen.Errors.NoError AND
	G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError AND
	G_CANopen_CAN1_VAR.HB_Error = EPEC_CANopen.Errors.NoError AND
	G_CANopen_CAN1_VAR.CSDO_Error = EPEC_CANopen.Errors.NoError AND
	G_CANopen_CAN1_VAR.GFC_Error = EPEC_CANopen.Errors.NoError
THEN
	o_Error := FALSE; (* No errors in protocol inits *)
ELSE
	o_Error := TRUE;

	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_INIT_NMT, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.NMT_Error), i_Info1:= 0, i_Info2:= 1);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_INIT_SSDO, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.SSDO_Error), i_Info1:= 0, i_Info2:= 1);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_INIT_OD, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.OD_Error), i_Info1:= 0, i_Info2:= 1);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_INIT_HB, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.HB_Error), i_Info1:= 0, i_Info2:= 1);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_INIT_CSDO, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.CSDO_Error), i_Info1:= 0, i_Info2:= 1);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_INIT_GFC, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.GFC_Error), i_Info1:= 0, i_Info2:= 1);

END_IF

o_Ready:=TRUE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties>
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/sil2objectproperties" handleUnknown="implementation">
            <SIL2ObjectProperties>
              <IsNonSafePRG>true</IsNonSafePRG>
            </SIL2ObjectProperties>
          </data>
        </addData>
      </pou>
      <pou name="Init_CANopen_OD1" pouType="program">
        <interface>
          <inputVars />
          <outputVars />
          <localVars />
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - CANopen object dictionary initialization

 This PRG contains non safety-related code.
 The following attribute is autogenerated. Do not remove.

</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*16#0001..16#0009 Default types *)
G_CANopen_CAN1_VAR.OD_Error := EPEC_CANopen.CANopenODAddDefautTypes(
	i_pOD:= ADR(G_CANopen_CAN1.OD)
);

(* 16#1000 Information about the device type *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_Index := G_CANOPEN_ODINDEX_DEVICE_TYPE,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_VAR,(*Type of index*)
		i_NumOfSubids := USINT#0,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_UNSIGNED32,(*Index datatype, either user defined or standard CiA 301*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_NOWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_Sub0data := USINT#0,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_CAN1_VAR.DeviceType_Device1),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#1001 Error information *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_Index := G_CANOPEN_ODINDEX_ERROR_REGISTER,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_VAR,(*Type of index*)
		i_NumOfSubids := USINT#0,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_UNSIGNED8,(*Index datatype, either user defined or standard CiA 301*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_NOWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_Sub0data := USINT#0,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_CAN1_VAR.ErrorReg_Device1),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#1008 Manufacturer device name *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_Index := G_CANOPEN_ODINDEX_MF_DEVICE_NAME,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_VAR,(*Type of index*)
		i_NumOfSubids := USINT#0,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_STRING,(*Index datatype, either user defined or standard CiA 301*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_NOWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_Sub0data := USINT#0,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_SystemInfo.DeviceName),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#100A Manufacturer software version *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_Index := G_CANOPEN_ODINDEX_MF_SW_VERSION,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_VAR,(*Type of index*)
		i_NumOfSubids := USINT#0,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_STRING,(*Index datatype, either user defined or standard CiA 301*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_NOWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_Sub0data := USINT#0,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_SystemInfo.SWVersion),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#1018   Vendor ID *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_index := G_CANOPEN_ODINDEX_IDENTITY_OBJECT,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_ARRAY, (*Type of index*)
		i_NumOfSubids := USINT#4,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_UNSIGNED32,(*Index of 16-bit deftype*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_NOWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_sub0data := USINT#4,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_SystemInfo.Identity),
		i_itfSDOHandler := DWORD#0
	);
END_IF
(* 16#2030   CodesysVersion *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_index := 16#2030,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_ARRAY, (*Type of index*)
		i_NumOfSubids := USINT#1,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_UNSIGNED32,(*Index of 16-bit deftype*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_NOWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_sub0data := USINT#1,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_SystemInfo.ToolsVersion),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#2128 PDO Dummy Variable Index *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_Index := 16#2128,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_VAR,(*Type of index*)
		i_NumOfSubids := USINT#0,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_UNSIGNED8,(*Index datatype, either user defined or standard CiA 301*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_READWRITE,
		i_Sub0data := USINT#0,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_CAN1_VAR.TPDO_DUMMY),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#2129 PDO Dummy Variable Index *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_Index := 16#2129,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_VAR,(*Type of index*)
		i_NumOfSubids := USINT#0,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_UNSIGNED8,(*Index datatype, either user defined or standard CiA 301*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_READWRITE,
		i_Sub0data := USINT#0,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_CAN1_VAR.RPDO_DUMMY),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#2130   Application version *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_index := 16#2130,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_ARRAY, (*Type of index*)
		i_NumOfSubids := USINT#10,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_STRING,(*Index of 16-bit deftype*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_NOWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_sub0data := USINT#10,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_SystemInfo.SoftwareInformation),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#2131 Parameter CSV unique ID *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_Index := 16#2131,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_VAR,(*Type of index*)
		i_NumOfSubids := USINT#0,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_UNSIGNED16,(*Index datatype, either user defined or standard CiA 301*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_NOWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_Sub0data := USINT#0,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_CAN1_VAR.Parameter_CSV_unique_ID),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#2150   CODESYS communication enabled *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_index := 16#2150,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_ARRAY, (*Type of index*)
		i_NumOfSubids := USINT#10,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_UNSIGNED16,(*Index of 16-bit deftype*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_READWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_sub0data := USINT#10,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_SystemInfo.CAN1_Comms),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(* 16#2151   CODESYS communication enabled *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD := ADR(G_CANopen_CAN1.OD),(*Address of Object dictionary where index will be added*)
		i_index := 16#2151,
		i_ObjectCode := EPEC_CANopen.ObjectCode.OD_ARRAY, (*Type of index*)
		i_NumOfSubids := USINT#10,(*Number of subindexes*)
		i_TypeSpec := EPEC_CANopen.DataType.Deftype_UNSIGNED16,(*Index of 16-bit deftype*)
		i_ObjectAccess := G_CANOPEN_OD_ACCESS_READWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_sub0data := USINT#10,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData := ADR(G_SystemInfo.CAN2_Comms),
		i_itfSDOHandler := DWORD#0
	);
END_IF

(*16#2170 Application log error count *)
IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD:= ADR(G_CANopen_CAN1.OD), (*Address of Object dictionary where index will be added *)
		i_index:= 16#2170,
		i_ObjectCode:= EPEC_CANopen.ObjectCode.OD_VAR, (*Type of index*)
		i_NumOfSubids:= USINT#0,(*Number of subindexes*)
		i_TypeSpec:= EPEC_CANopen.DataType.Deftype_UNSIGNED32,(*Index of 32 - bit deftype *)
		i_ObjectAccess:= G_CANOPEN_OD_ACCESS_NOWRITE OR G_CANOPEN_OD_ACCESS_SUB0NOWRITE,
		i_sub0data := USINT#0,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData:= ADR(G_Logs.ApplicationLog.count),
		i_itfSDOHandler:= DWORD#0
	);
END_IF

(*16#2171 Application log domain *)
	IF G_CANopen_CAN1_VAR.OD_Error = EPEC_CANopen.Errors.NoError THEN
	G_CANopen_CAN1.AppLogDomain.DataSize:= SIZEOF(G_Logs.ApplicationLog.loglines) * 8;
	G_CANopen_CAN1.AppLogDomain.pData:= ADR(G_Logs.ApplicationLog.loglines);

	G_CANopen_CAN1_VAR.OD_Error := CANopenODAddLine(
		i_pOD:= ADR(G_CANopen_CAN1.OD), (*Address of Object dictionary where index will be added *)
		i_index:= 16#2171,
		i_ObjectCode:= EPEC_CANOPEN.ObjectCode.OD_DOMAIN, (*Type of index*)
		i_NumOfSubids:= USINT#0,(*Number of subindexes*)
		i_TypeSpec:= EPEC_CANOPEN.DataType.Deftype_Domain,(*Domain deftype *)
		i_ObjectAccess:= G_CANOPEN_OD_ACCESS_NOWRITE,
		i_sub0data:= USINT#0,(*Value of subindex0 in array or (def)struct*)
		i_pIndexData:= ADR(G_CANopen_CAN1.AppLogDomain),
		i_itfSDOHandler:= DWORD#0
	);
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties>
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/sil2objectproperties" handleUnknown="implementation">
            <SIL2ObjectProperties>
              <IsNonSafePRG>true</IsNonSafePRG>
            </SIL2ObjectProperties>
          </data>
        </addData>
      </pou>
      <pou name="Handle_CANopen_CAN1" pouType="program">
        <interface>
          <inputVars />
          <outputVars>
            <variable name="o_Error" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </outputVars>
          <localVars />
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - CANopen data update

 This PRG contains non safety-related code.
 The following attribute is autogenerated. Do not remove.

</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Update callback data *)
IF G_CAN.Channel1.GetLatestError() &lt;&gt; DWORD#0 THEN
	G_CANopen_CAN1_VAR.Callback_Error := EPEC_CANopen.Errors.CallbackError;
ELSE
	G_CANopen_CAN1_VAR.Callback_Error := EPEC_CANopen.Errors.NoError;
END_IF

(* Update protocol data *)
G_CANopen_CAN1.HB_Handler.Update(
	i_Enable := TRUE,
	o_Error =&gt; G_CANopen_CAN1_VAR.HB_Error
);
G_CANopen_CAN1.NMT_Handler.Update(
	i_Enable := TRUE,
	o_Error =&gt; G_CANopen_CAN1_VAR.NMT_Error
);
G_CANopen_CAN1.SSDO_Handler.Update(
	i_Enable := TRUE,
	o_Error =&gt; G_CANopen_CAN1_VAR.SSDO_Error
);
G_CANopen_CAN1.GFC_Handler.Update(
	i_Enable := TRUE,
	o_Error =&gt; G_CANopen_CAN1_VAR.GFC_Error
);

IF G_CANopen_CAN1_VAR.HB_Error = EPEC_CANopen.Errors.NoError AND
	G_CANopen_CAN1_VAR.NMT_Error = EPEC_CANopen.Errors.NoError AND
	G_CANopen_CAN1_VAR.SSDO_Error = EPEC_CANopen.Errors.NoError AND
	G_CANopen_CAN1_VAR.GFC_Error = EPEC_CANopen.Errors.NoError
THEN
	o_Error := FALSE;
ELSE
	o_Error := TRUE;

	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_UPDATE_HB, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.HB_Error), i_Info1:= 0, i_Info2:= 1);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_UPDATE_NMT, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.NMT_Error), i_Info1:= 0, i_Info2:= 1);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_UPDATE_SSDO, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.SSDO_Error), i_Info1:= 0, i_Info2:= 1);
	EPEC_SERRLOG.S_AddError_DWORD(i_ErrorCode:= ApplicationErrors.CANOPEN_UPDATE_GFC, i_LibraryErrorCode:= INT_TO_DINT(G_CANopen_CAN1_VAR.GFC_Error), i_Info1:= 0, i_Info2:= 1);

END_IF

(*Check for NMT reset *)
IF G_CANopen_CAN1.NMT.StateChanged THEN
	IF G_CANopen_CAN1.NMT.LastNmtCommand = EPEC_CANopen.NMTCommand.Reset OR
		G_CANopen_CAN1.NMT.LastNmtCommand = EPEC_CANopen.NMTCommand.ResetCommunication
	THEN
		(* If there is an NMT reset command for the IEC application CANopen device,
		   This is only informative, application decides how to react to the command *)
		G_StatusFlags.CANopenCan1NMTResetRequest := TRUE;
	END_IF
END_IF

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties>
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/sil2objectproperties" handleUnknown="implementation">
            <SIL2ObjectProperties>
              <IsNonSafePRG>true</IsNonSafePRG>
            </SIL2ObjectProperties>
          </data>
        </addData>
      </pou>
      <pou name="Init_IO" pouType="program">
        <interface>
          <inputVars />
          <outputVars>
            <variable name="o_Ready" fromAppToFw="false">
              <type>
                <derived name="SAFEBOOL" />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="o_Error" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="o_ErrorInConnector" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="DWORD#0" />
              </initialValue>
            </variable>
            <variable name="o_ErrorInPin" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="DWORD#0" />
              </initialValue>
            </variable>
            <variable name="o_FWErrorCode" fromAppToFw="false">
              <type>
                <derived name="EPEC_SYSTEM.SYSTEM_ERROR_CODES" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
          </outputVars>
          <localVars>
            <variable name="result" fromAppToFw="false">
              <type>
                <derived name="EPEC_SYSTEM.SYSTEM_ERROR_CODES" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
            </variable>
            <variable name="pin" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="DWORD#0" />
              </initialValue>
            </variable>
            <variable name="connector" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="DWORD#0" />
              </initialValue>
            </variable>
            <variable name="info1" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="DWORD#0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">MSW connector, LSW pin</xhtml>
              </documentation>
            </variable>
            <variable name="info2" fromAppToFw="false">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="DWORD#0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">error specific</xhtml>
              </documentation>
            </variable>
          </localVars>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - Init IO.

 This PRG contains safety-related code.
 The following attribute is autogenerated. Do not remove.

</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	result := EPEC_IODRV.IoDrvSetState(EPEC_IODRV.IoDrvStates.IODRV_STATE_CONFIGURATION);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	connector := 255; // internal
	pin := 1;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_PWR_SWT_AFTER, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 2;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_PWR_SWT_BEFORE, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 3;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_REF_VOLTAGE, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 4;
	result := EPEC_IODRV.IoDrvDOSetConfig(EPEC_HW.IO_Channels.PIN_INT_DO_REF_VOLTAGE_10V, NOT(G_CONSTANTS.DIAG_REF_TYPE_5V));
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 5;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_TEMP1, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 6;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_TEMP2, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 7;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_VIn_1_1, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 8;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_VIN_POWER, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 9;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_MCU_TEMP, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 10;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_5VAN, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF

IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	pin := 11;
	result := EPEC_IODRV.IoDrvAISetMode(EPEC_HW.IO_Channels.PIN_INT_AI_SBC_TEMP, EPEC_IODRV.IoDrvModes.IODRV_MODE_AI_ENABLED);
END_IF
  
IF result = EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	result := EPEC_IODRV.IoDrvSetState(EPEC_IODRV.IoDrvStates.IODRV_STATE_RUN);
	o_FWErrorCode := result;
END_IF

IF result &lt;&gt; EPEC_SYSTEM.SYSTEM_ERROR_CODES.FW_ERR_OK THEN
	o_Error:=TRUE;
	o_ErrorInConnector := connector;
	o_ErrorInPin := pin;
	o_FWErrorCode := result;

	info1:= SHL(connector, 16) OR pin;
	EPEC_SERRLOG.S_AddError_DWORD(
		i_ErrorCode:= ApplicationErrors.IO_INIT,
		i_LibraryErrorCode:= result,
		i_Info1:= info1, // MSW connector, LSW pin
		i_Info2:= info2 // error specific
	);
END_IF

o_Ready:=TRUE;
</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="Inputs" pouType="program">
        <interface>
          <inputVars>
            <variable name="i_Enable" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
              </documentation>
            </variable>
            <variable name="i_Initialize" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="o_InitReady" fromAppToFw="false">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
              </documentation>
            </variable>
            <variable name="o_AI_POWER1_SUPPLY_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurent for power switch input voltage [unscaled]</xhtml>
              </documentation>
            </variable>
            <variable name="o_AI_POWER1_OUTPUT_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for power switch output voltage [unscaled].</xhtml>
              </documentation>
            </variable>
            <variable name="o_AI_REF_OUTPUT_MAIN_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for selectable reference voltage (5/10V) [unscaled].</xhtml>
              </documentation>
            </variable>
            <variable name="o_TEMP_PCB_MAIN_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for PCB temperature 1 [unscaled]</xhtml>
              </documentation>
            </variable>
            <variable name="o_TEMP_PCB_RED_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for PCB temperature 2 [unscaled]</xhtml>
              </documentation>
            </variable>
            <variable name="o_VIN_1_1_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for supply pin voltage [unscaled]</xhtml>
              </documentation>
            </variable>
            <variable name="o_VIN_POWER_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for Vin power [unscaled]</xhtml>
              </documentation>
            </variable>
            <variable name="o_TEMP_MCU_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DINT" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for MCU temperature [0.1C]</xhtml>
              </documentation>
            </variable>
            <variable name="o_AI_5VAN_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for 5VAN voltage [unscaled]</xhtml>
              </documentation>
            </variable>
            <variable name="o_AI_SBC_TEMP_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DINT" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">SBC temperature [0.1 C]</xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="AI_POWER1_SUPPLY_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurent for power switch input voltage (Mapped variable)</xhtml>
              </documentation>
            </variable>
            <variable name="AI_POWER1_OUTPUT_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for power switch output voltage (Mapped variable)..</xhtml>
              </documentation>
            </variable>
            <variable name="AI_REF_OUTPUT_MAIN_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for selectable reference voltage (5/10V). (Mapped variable)</xhtml>
              </documentation>
            </variable>
            <variable name="TEMP_PCB_MAIN_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for PCB temperature 1 (Mapped variable)</xhtml>
              </documentation>
            </variable>
            <variable name="TEMP_PCB_RED_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for PCB temperature 2 (Mapped variable)</xhtml>
              </documentation>
            </variable>
            <variable name="VIN_1_1_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for supply pin voltage (Mapped variable)</xhtml>
              </documentation>
            </variable>
            <variable name="VIN_POWER_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for Vin power (Mapped variable)</xhtml>
              </documentation>
            </variable>
            <variable name="TEMP_MCU_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DINT" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for MCU temperature (Mapped variable)</xhtml>
              </documentation>
            </variable>
            <variable name="AI_5VAN_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DWORD" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Measurement for 5VAN voltage (Mapped variable)</xhtml>
              </documentation>
            </variable>
            <variable name="AI_SBC_TEMP_Diagnostic" fromAppToFw="false">
              <type>
                <derived name="DINT" />
              </type>
              <initialValue>
                <simpleValue value="" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">SBC temperature [0.1 C]</xhtml>
              </documentation>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="hide_all_locals" />
                <Attribute Name="location" Value="16#800" />
              </Attributes>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

    Content:
    - Input pin data update.

    This PRG contains non safety-related code.
    The following attribute is autogenerated. Do not remove.
</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF(i_Initialize) THEN
	o_InitReady:= TRUE;
  
ELSE

	(* Copy measured diagnostic signals to outputs *)
	o_AI_POWER1_SUPPLY_Diagnostic := AI_POWER1_SUPPLY_Diagnostic;
	o_AI_POWER1_OUTPUT_Diagnostic := AI_POWER1_OUTPUT_Diagnostic;
	o_AI_REF_OUTPUT_MAIN_Diagnostic := AI_REF_OUTPUT_MAIN_Diagnostic;
	o_TEMP_PCB_MAIN_Diagnostic := TEMP_PCB_MAIN_Diagnostic;
	o_TEMP_PCB_RED_Diagnostic := TEMP_PCB_RED_Diagnostic;
	o_VIN_1_1_Diagnostic := VIN_1_1_Diagnostic;
	o_VIN_POWER_Diagnostic := VIN_POWER_Diagnostic;
	o_TEMP_MCU_Diagnostic := TEMP_MCU_Diagnostic;
	o_AI_5VAN_Diagnostic := AI_5VAN_Diagnostic;
	o_AI_SBC_TEMP_Diagnostic := AI_SBC_TEMP_Diagnostic;


  
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties>
              <EnableSystemCall>true</EnableSystemCall>
            </BuildProperties>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/sil2objectproperties" handleUnknown="implementation">
            <SIL2ObjectProperties>
              <IsNonSafePRG>true</IsNonSafePRG>
            </SIL2ObjectProperties>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="G_CONSTANTS" constant="true">
        <variable name="DIAG_TEMP_HIGH_LIMIT" fromAppToFw="false">
          <type>
            <DINT>DINT</DINT>
          </type>
          <initialValue>
            <simpleValue value="105" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Diagnostic limit constants</xhtml>
          </documentation>
        </variable>
        <variable name="DIAG_TEMP_LOW_LIMIT" fromAppToFw="false">
          <type>
            <DINT>DINT</DINT>
          </type>
          <initialValue>
            <simpleValue value="-35" />
          </initialValue>
        </variable>
        <variable name="DIAG_TEMP_DELAY" fromAppToFw="false">
          <type>
            <UINT>UINT</UINT>
          </type>
          <initialValue>
            <simpleValue value="50" />
          </initialValue>
        </variable>
        <variable name="DIAG_SUPPLY_VOLTAGE_HIGH_LIMIT" fromAppToFw="false">
          <type>
            <DINT>DINT</DINT>
          </type>
          <initialValue>
            <simpleValue value="34000" />
          </initialValue>
        </variable>
        <variable name="DIAG_SUPPLY_VOLTAGE_LOW_LIMIT" fromAppToFw="false">
          <type>
            <DINT>DINT</DINT>
          </type>
          <initialValue>
            <simpleValue value="9000" />
          </initialValue>
        </variable>
        <variable name="DIAG_SUPPLY_VOLTAGE_DELAY" fromAppToFw="false">
          <type>
            <UINT>UINT</UINT>
          </type>
          <initialValue>
            <simpleValue value="95" />
          </initialValue>
        </variable>
        <variable name="DIAG_OUTPUT_GROUP1_HIGH_LIMIT" fromAppToFw="false">
          <type>
            <DINT>DINT</DINT>
          </type>
          <initialValue>
            <simpleValue value="34000" />
          </initialValue>
        </variable>
        <variable name="DIAG_OUTPUT_GROUP1_LOW_LIMIT" fromAppToFw="false">
          <type>
            <DINT>DINT</DINT>
          </type>
          <initialValue>
            <simpleValue value="9000" />
          </initialValue>
        </variable>
        <variable name="DIAG_OUTPUT_GROUP1_DELAY" fromAppToFw="false">
          <type>
            <UINT>UINT</UINT>
          </type>
          <initialValue>
            <simpleValue value="95" />
          </initialValue>
        </variable>
        <variable name="DIAG_5V_VAN_HIGH_LIMIT" fromAppToFw="false">
          <type>
            <DINT>DINT</DINT>
          </type>
          <initialValue>
            <simpleValue value="5250" />
          </initialValue>
        </variable>
        <variable name="DIAG_5V_VAN_LOW_LIMIT" fromAppToFw="false">
          <type>
            <DINT>DINT</DINT>
          </type>
          <initialValue>
            <simpleValue value="4750" />
          </initialValue>
        </variable>
        <variable name="DIAG_5V_VAN_DELAY" fromAppToFw="false">
          <type>
            <UINT>UINT</UINT>
          </type>
          <initialValue>
            <simpleValue value="50" />
          </initialValue>
        </variable>
        <variable name="DIAG_REF_DELAY" fromAppToFw="false">
          <type>
            <UINT>UINT</UINT>
          </type>
          <initialValue>
            <simpleValue value="50" />
          </initialValue>
        </variable>
        <variable name="DIAG_REF_TYPE_5V" fromAppToFw="false">
          <type>
            <BOOL>BOOL</BOOL>
          </type>
          <initialValue>
            <simpleValue value="TRUE" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Reference output range selection [ TRUE = 5V, FALSE = 10V ]</xhtml>
          </documentation>
        </variable>
        <variable name="G_PARAMHANDLERKEYWORD" fromAppToFw="false">
          <type>
            <DWORD />
          </type>
          <initialValue>
            <simpleValue value="16#4EB1DA68" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Parameterhandler keyword</xhtml>
          </documentation>
        </variable>
        <variable name="G_PARAMETER_SAVE_STATUS_ERROR" fromAppToFw="false">
          <type>
            <BYTE />
          </type>
          <initialValue>
            <simpleValue value="BYTE#16#00" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="G_PARAMETER_SAVE_STATUS_DONE" fromAppToFw="false">
          <type>
            <BYTE />
          </type>
          <initialValue>
            <simpleValue value="BYTE#16#01" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="G_PARAMETER_SAVE_STATUS_IN_PROGRESS" fromAppToFw="false">
          <type>
            <BYTE />
          </type>
          <initialValue>
            <simpleValue value="BYTE#16#FF" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="G_SAFE_PARAMETERS_AUTHENTICATED" fromAppToFw="false">
          <type>
            <BYTE />
          </type>
          <initialValue>
            <simpleValue value="BYTE#1" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="G_SAFE_PARAMETERS_NOT_AUTHENTICATED" fromAppToFw="false">
          <type>
            <BYTE />
          </type>
          <initialValue>
            <simpleValue value="BYTE#0" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!

	This object is created by Epec MultiTool.
	User changes are overwritten when project is imported.

	Content:
	- Project specific constant definitions</xhtml>
        </documentation>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="G_CAN">
        <variable name="Channel1" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANL2.Channel" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
        </variable>
        <variable name="Channel2" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANL2.Channel" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes xmlns="http://www.plcopen.org/xml/tc6_0200">
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
        </addData>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!

	This object is created by Epec MultiTool.
	User changes are overwritten when project is imported.

	Content:
	- CAN definitions</xhtml>
        </documentation>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="G_Common">
        <variable name="ParHandler" fromAppToFw="false">
          <type>
            <derived name="EPEC_PH.ParameterHandler" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Parameterhandler. Utility library for ODSave. Library handles parameter image modification. </xhtml>
          </documentation>
        </variable>
        <variable name="ParameterArea" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="EPEC_HWD.LibParameters.G_PARAM_AREA_MAX_SIZE" />
              <baseType>
                <BYTE />
              </baseType>
            </array>
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Parameter image</xhtml>
          </documentation>
        </variable>
        <variable name="FastParHandler" fromAppToFw="false">
          <type>
            <derived name="EPEC_PH.ParameterHandler" />
          </type>
        </variable>
        <variable name="FastParameterArea" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="EPEC_HWD.LibParameters.G_USER_VALUE_AREA_MAX_SIZE" />
              <baseType>
                <BYTE />
              </baseType>
            </array>
          </type>
        </variable>
        <variable name="FastParameters" fromAppToFw="false">
          <type>
            <derived name="FastParameters" />
          </type>
        </variable>
        <variable name="SaveFastParameters" fromAppToFw="false">
          <type>
            <BOOL />
          </type>
          <initialValue>
            <simpleValue value="FALSE" />
          </initialValue>
        </variable>
        <variable name="ProjectKey" fromAppToFw="false">
          <type>
            <string length="79" />
          </type>
          <initialValue>
            <simpleValue value="'2JnCsjKPnmjYPqk'" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Project key, used for validating the response code</xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes xmlns="http://www.plcopen.org/xml/tc6_0200">
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="location" Value="16#800" />
            </Attributes>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="G_IO" xmlns="http://www.plcopen.org/xml/tc6_0200">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="G_Logs" xmlns="http://www.plcopen.org/xml/tc6_0200">
        <variable name="ApplicationLog" fromAppToFw="false">
          <type>
            <derived name="EPEC_SERRLOG.ErrorLog" />
          </type>
        </variable>
        <variable name="AppLogInitOK" fromAppToFw="false">
          <type>
            <BOOL />
          </type>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes xmlns="">
              <Attribute Name="qualified_only" />
              <Attribute Name="location" Value="16#800" />
            </Attributes>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="G_IODiagnostic" xmlns="http://www.plcopen.org/xml/tc6_0200">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="location" Value="16#800" />
            </Attributes>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="G_StatusFlags" xmlns="http://www.plcopen.org/xml/tc6_0200">
        <variable name="CANopenCan1NMTResetRequest">
          <type>
            <BOOL />
          </type>
          <initialValue>
            <simpleValue value="FALSE" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Reset request flags tell if module is wanted to reset after current application cycle. </xhtml>
          </documentation>
        </variable>
        <variable name="CANopenCan2NMTResetRequest">
          <type>
            <BOOL />
          </type>
          <initialValue>
            <simpleValue value="FALSE" />
          </initialValue>
        </variable>
        <variable name="SystemOk">
          <type>
            <BOOL />
          </type>
          <initialValue>
            <simpleValue value="FALSE" />
          </initialValue>
        </variable>
        <variable name="CustomLEDControlEnable">
          <type>
            <BOOL />
          </type>
          <initialValue>
            <simpleValue value="FALSE" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Flags to control the status LED from the application</xhtml>
          </documentation>
        </variable>
        <variable name="RedLED">
          <type>
            <BOOL />
          </type>
          <initialValue>
            <simpleValue value="FALSE" />
          </initialValue>
        </variable>
        <variable name="GreenLED">
          <type>
            <BOOL />
          </type>
          <initialValue>
            <simpleValue value="FALSE" />
          </initialValue>
        </variable>
        <variable name="BlueLED">
          <type>
            <BOOL />
          </type>
          <initialValue>
            <simpleValue value="FALSE" />
          </initialValue>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="location" Value="16#800" />
            </Attributes>
          </data>
        </addData>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">            NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!

            This object is created by Epec MultiTool.
            User changes are overwritten when project is imported.

            Content:
            - PLC_PRG status flags

          </xhtml>
        </documentation>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="G_SystemInfo">
        <variable name="ProjectInfo" fromAppToFw="false">
          <type>
            <derived name="PROJECT_INFO" />
          </type>
        </variable>
        <variable name="DeviceName" fromAppToFw="false">
          <type>
            <string length="79" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#1008: Manufacturer device name</xhtml>
          </documentation>
        </variable>
        <variable name="HWVersion" fromAppToFw="false">
          <type>
            <string length="79" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#1009: Manufacturer hardware version</xhtml>
          </documentation>
        </variable>
        <variable name="SWVersion" fromAppToFw="false">
          <type>
            <string length="79" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#100A: Manufacturer software version</xhtml>
          </documentation>
        </variable>
        <variable name="Identity" fromAppToFw="false">
          <type>
            <derived name="IdentityObject" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#1018: Identity object </xhtml>
          </documentation>
        </variable>
        <variable name="ToolsVersion" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="1" />
              <baseType>
                <DWORD />
              </baseType>
            </array>
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#2030 Codesys version</xhtml>
          </documentation>
        </variable>
        <variable name="SoftwareInformation" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="10" />
              <baseType>
                <string length="79" />
              </baseType>
            </array>
          </type>
          <initialValue xsi:type="ArrayValueValue">
            <arrayValue>
              <value>
                <simpleValue value="''" />
              </value>
            </arrayValue>
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#2130 Software information
 Sub1: Application version
 Sub2: Additional version information
 Sub3: Reserved for future use
 Sub4: Reserved for future use
 Sub5: Reserved for future use
 Sub6: Reserved for future use
 Sub7: Reserved for future use
 Sub8: Reserved for future use
 Sub9: Reserved for future use
 Sub10: Reserved for future use</xhtml>
          </documentation>
        </variable>
        <variable name="CAN1_Comms" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="10" />
              <baseType>
                <WORD />
              </baseType>
            </array>
          </type>
          <initialValue xsi:type="ArrayValueValue">
            <simpleValue value="[10(0)]" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#2150 CAN 1 Communication parameters
 Sub1: CODESYS communication enabled
 Sub2: CODESYS communication node-ID
 Sub3: Bit rate
 Sub4: Cable detection offset for CODESYS node-ID
 Sub5: Cable detection offset for PLCopen node-ID
 Sub6: Mask for cable detection pins
 Sub7: Reserved
 Sub8: Reserved
 Sub9: Reserved
 Sub10: PLCopen application node-ID in CAN1</xhtml>
          </documentation>
        </variable>
        <variable name="CAN2_Comms" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="10" />
              <baseType>
                <WORD />
              </baseType>
            </array>
          </type>
          <initialValue xsi:type="ArrayValueValue">
            <simpleValue value="[10(0)]" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#2151 CAN 2 Communication parameters
 Sub1: CODESYS communication enabled
 Sub2: CODESYS communication node-ID
 Sub3: Bit rate
 Sub4: Reserved
 Sub5: Reserved
 Sub6: Reserved
 Sub7: Reserved
 Sub8: Reserved
 Sub9: Reserved
 Sub10: PLCopen application node-ID in CAN2</xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes xmlns="http://www.plcopen.org/xml/tc6_0200">
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="location" Value="16#800" />
            </Attributes>
          </data>
        </addData>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!

	This object is created by Epec MultiTool.
	User changes are overwritten when project is imported.

	Content:
	- System information common for all ODs.
</xhtml>
        </documentation>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
      <Libraries xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plcopen.org/xml/tc6_0200">
        <Library Name="#CmpApp" Namespace="CmpApp" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CmpApp, * (System)" />
        <Library Name="#EPEC_CANL2" Namespace="EPEC_CANL2" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CANL2 CANVXD, 4.0.0.2 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_MAX_NUMBER_OF_COBIDS" Value="100" />
            <Parameter Name="G_TX_MESSAGE_POOL_SIZE" Value="100" />
            <Parameter Name="G_NUMBER_OF_LAST_CAN_BUS" Value="1" />
          </Parameters>
        </Library>
        <Library Name="#EPEC_HW" Namespace="EPEC_HW" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="EC44int, 1.1.0.5 (Epec Oy)" />
        <Library Name="#EPEC_IODRV" Namespace="EPEC_IODRV" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SafeSSeriesIoDriverExt, 1.0.0.6 (Epec Oy)" />
        <Library Name="#EPEC_CANEXT" Namespace="EPEC_CANEXT" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SSeriesCanExt, 1.0.0.1 (Epec Oy)" />
        <Library Name="#EPEC_NVRAM" Namespace="EPEC_NVRAM" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SSeriesNvRamExt, 1.0.0.4 (Epec Oy)" />
        <Library Name="#EPEC_SYSTEM" Namespace="EPEC_SYSTEM" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SSeriesSystemExt, 1.0.0.11 (Epec Oy)" />
        <Library Name="#EPEC_HWD" Namespace="EPEC_HWD" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SSeriesHardware, 1.1.5.0 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_USER_VALUE_AREA_MAX_SIZE" Value="256" />
            <Parameter Name="G_PARAM_AREA_MAX_SIZE" Value="7680" />
            <Parameter Name="G_PARAM_BLOCK_MAX_SIZE" Value="1024" />
            <Parameter Name="G_PARAM_BACKUP_IN_USE" Value="FALSE" />
            <Parameter Name="G_PARAMETER_HEADERS_SIZE" Value="41" />
            <Parameter Name="G_DM2_AREA_MAX_SIZE" Value="0" />
            <Parameter Name="G_DM2_BLOCK_MAX_SIZE" Value="0" />
            <Parameter Name="G_MACHINE_TYPE_AREA_MAX_SIZE" Value="0" />
            <Parameter Name="G_MACHINE_TYPE_BLOCK_MAX_SIZE" Value="0" />
          </Parameters>
        </Library>
        <Library Name="#EPEC_CANVXD" Namespace="EPEC_CANVXD" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CANVXD API, 4.0.0.1 (Epec Oy)" />
        <Library Name="#EPEC_DITF" Namespace="EPEC_DITF" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="DiagnosticInterface, 1.0.0.1 (Epec Oy)" />
        <Library Name="#EPEC_SHWD" Namespace="EPEC_SHWD" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Safe S Series Hardware, 1.5.2.0 (Epec Oy)" />
        <Library Name="#EPEC_SRDO" Namespace="EPEC_SRDO" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Safe CANopen SRDO, 1.1.0.0 (Epec Oy)" />
        <Library Name="#EPEC_SC" Namespace="EPEC_SC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Safe Conversion, 1.0.1.2 (Epec Oy)" />
        <Library Name="#EPEC_SDV" Namespace="EPEC_SDV" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Safe Data Validation, 1.0.1.0 (Epec Oy)" />
        <Library Name="#EPEC_SJCD" Namespace="EPEC_SJCD" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Safe Joystick Calibration And Diagnostic, 1.1.0.2 (Epec Oy)" />
        <Library Name="#EPEC_SPVC" Namespace="EPEC_SPVC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Safe Proportional Valve Control, 1.1.0.2 (Epec Oy)" />
        <Library Name="#EPEC_SSCD" Namespace="EPEC_SSCD" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Safe Sensor Calibration, 1.0.1.2 (Epec Oy)" />
        <Library Name="#EPEC_CANopen" Namespace="EPEC_CANopen" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CANopen, 4.0.13.2 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_CANOPEN_NUMBER_OF_LAST_PDO_MAP" Value="8" />
            <Parameter Name="G_CANOPEN_NUMBER_OF_LAST_SRDO_MAP" Value="8" />
            <Parameter Name="G_MOTOROLA_BYTE_ORDER" Value="0" />
            <Parameter Name="G_SYSTEM_STRUCT_ALIGNMENT" Value="32" />
            <Parameter Name="G_IGNORE_INDEX_1F50H" Value="1" />
            <Parameter Name="G_IGNORE_INDEX_1F50H_TIMEOUT" Value="500" />
            <Parameter Name="G_CANOPEN_NUMBER_OF_LAST_CAN_BUS" Value="1" />
            <Parameter Name="G_CANOPEN_SLAVE_NUMBER_OF_MAPPINGS_PER_PDO" Value="8" />
          </Parameters>
        </Library>
        <Library Name="#EPEC_ODSave" Namespace="EPEC_ODSave" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CANopen OD Save, 4.0.0.16 (Epec Oy)" />
        <Library Name="#EPEC_PH" Namespace="EPEC_PH" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Parameter Handler, 1.0.2.3 (Epec Oy)" />
        <Library Name="#EPEC_ELT" Namespace="EPEC_ELT" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Event Log Transfer, 3.0.5.0 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_ELT_COPYEXTEVENTS" Value="TRUE" />
            <Parameter Name="G_ELT_NO_TIMESTAMP" Value="TRUE" />
          </Parameters>
        </Library>
        <Library Name="#EPEC_J1939" Namespace="EPEC_J1939" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SAE J1939, 3.1.2.0 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_J1939_MAX_NUMBER_OF_LONG_TRANSFER" Value="2" />
            <Parameter Name="G_J1939_MAX_NUMBER_OF_FAST_TRANSFER" Value="2" />
            <Parameter Name="G_J1939_MAX_NUMBER_OF_DATA_PACKETS" Value="255" />
            <Parameter Name="G_J1939_TIMEOUT_BETWEEN_CTS_AND_DT" Value="1250" />
            <Parameter Name="G_J1939_TIMEOUT_BETWEEN_TWO_DT_MSG " Value="720" />
            <Parameter Name="G_J1939_TIMEOUT_FOR_CTS_OR_EOMA" Value="1250" />
            <Parameter Name="G_J1939_TIMEOUT_CTS_WAIT" Value="1020" />
            <Parameter Name="G_J1939_CYCLE_TIME_FOR_DT_MSG" Value="52" />
            <Parameter Name="G_J1939_TIMEOUT_FAST_TRANSFER" Value="750" />
            <Parameter Name="G_J1939_MAX_NBR_OF_RQST_CALLBACKS" Value="10" />
          </Parameters>
        </Library>
        <Library Name="#EPEC_J1939Event" Namespace="EPEC_J1939Event" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="J1939 To Event Translator, 3.0.2.2 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_J1939EVENT_MAX_NUMBER_OF_SOURCES" Value="2" />
            <Parameter Name="G_J1939EVENT_DM1_LOGSIZE" Value="16" />
          </Parameters>
        </Library>
        <Library Name="#EPEC_SERRLOG" Namespace="EPEC_SERRLOG" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SafeErrorLog, 1.0.0.0 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_ERROR_LOG_MAX_LINES" Value="50" />
          </Parameters>
        </Library>
        <Library Name="#EPEC_ACL" Namespace="EPEC_ACL" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="AddressClaiming, 1.0.1.0 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_ACL_MAX_NBR_OF_OWN_DEVICES" Value="1" />
            <Parameter Name="G_ACL_MAX_NBR_OF_SYSTEM_DEVICES" Value="20" />
            <Parameter Name="G_ACL_INITIAL_DELAY" Value="T#250ms" />
          </Parameters>
        </Library>
        <Library Name="#EPEC_SA" Namespace="EPEC_SA" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Sensors And Actuators, 1.0.3.0 (Epec Oy)" />
        <Library Name="#EPEC_ISOBUS" Namespace="EPEC_ISOBUS" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="ISOBUS, 1.0.0.1 (Epec Oy)" />
        <Library Name="#EPEC_LIC" Namespace="EPEC_LIC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SSeriesLicense, 1.0.0.0 (Epec Oy)" />
        <Library Name="#EPEC_J1939DM" Namespace="EPEC_J1939DM" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="J1939DM, 1.0.0.3 (Epec Oy)" />
        <Library Name="#EPEC_MachineType" Namespace="EPEC_MachineType" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="MachineType, 1.0.0.1 (Epec Oy)" />
        <Library Name="#EPEC_DT" Namespace="EPEC_DT" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="DataTransfer, 3.0.4.0 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_DT_MAXNUMBEROFCONNECTIONS" Value="1" />
            <Parameter Name="G_DT_FRAMESONONESECOND" Value="200" />
            <Parameter Name="G_DT_MAXNUMBEROFPROTOCOLS" Value="3" />
          </Parameters>
        </Library>
        <Library Name="#EPEC_IOD" Namespace="EPEC_IOD" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="IO Diagnostic, 1.0.0.1 (Epec Oy)" />
        <Library Name="#EPEC_IODT" Namespace="EPEC_IODT" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="IO Diagnostic Transfer, 1.0.0.2 (Epec Oy)" />
        <Library Name="#EPEC_EL" Namespace="EPEC_EL" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Event Log, 3.3.4.0 (Epec Oy)">
          <Parameters>
            <Parameter Name="G_EL_NUMBER_OF_SOURCES" Value="1" />
            <Parameter Name="G_EL_EVENTLOGBUFFERSIZE" Value="200" />
            <Parameter Name="G_EL_PRODUCER" Value="1" />
            <Parameter Name="G_EL_MAXVISIBLELOGLINES" Value="1" />
            <Parameter Name="G_EL_COUNTOFTYPES" Value="5" />
            <Parameter Name="G_EL_SORTEDEVENTITEMCOUNT" Value="1" />
            <Parameter Name="G_EL_MAXEVENTTRANSLATORS" Value="10" />
            <Parameter Name="EL_END_OF_EVENTS" Value="1" />
            <Parameter Name="G_EL_COPYEXTEVENTS" Value="TRUE" />
            <Parameter Name="G_EL_DISABLE_NEW_LINE" Value="FALSE" />
            <Parameter Name="G_EL_EVENT_COUNTER_TYPE" Value="0" />
            <Parameter Name="G_EL_SET_EVENT_FALLING_EDGE" Value="FALSE" />
            <Parameter Name="G_EL_NUMBER_OF_READLOG_INSTANCES" Value="1" />
          </Parameters>
        </Library>
        <LibraryParameters>
          <ParameterList LibraryId="#EPEC_CANL2">
            <Parameters>
              <Parameter Name="G_MAX_NUMBER_OF_COBIDS" Value="100" />
              <Parameter Name="G_TX_MESSAGE_POOL_SIZE" Value="100" />
              <Parameter Name="G_NUMBER_OF_LAST_CAN_BUS" Value="1" />
            </Parameters>
          </ParameterList>
          <ParameterList LibraryId="#EPEC_HW" />
          <ParameterList LibraryId="#EPEC_IODRV" />
          <ParameterList LibraryId="#EPEC_CANEXT" />
          <ParameterList LibraryId="#EPEC_NVRAM" />
          <ParameterList LibraryId="#EPEC_SYSTEM" />
          <ParameterList LibraryId="#EPEC_HWD">
            <Parameters>
              <Parameter Name="G_USER_VALUE_AREA_MAX_SIZE" Value="256" />
              <Parameter Name="G_PARAM_AREA_MAX_SIZE" Value="7680" />
              <Parameter Name="G_PARAM_BLOCK_MAX_SIZE" Value="1024" />
              <Parameter Name="G_PARAM_BACKUP_IN_USE" Value="FALSE" />
              <Parameter Name="G_PARAMETER_HEADERS_SIZE" Value="41" />
              <Parameter Name="G_DM2_AREA_MAX_SIZE" Value="0" />
              <Parameter Name="G_DM2_BLOCK_MAX_SIZE" Value="0" />
              <Parameter Name="G_MACHINE_TYPE_AREA_MAX_SIZE" Value="0" />
              <Parameter Name="G_MACHINE_TYPE_BLOCK_MAX_SIZE" Value="0" />
            </Parameters>
          </ParameterList>
          <ParameterList LibraryId="#EPEC_CANVXD" />
          <ParameterList LibraryId="#EPEC_DITF" />
          <ParameterList LibraryId="#EPEC_SHWD" />
          <ParameterList LibraryId="#EPEC_SRDO" />
          <ParameterList LibraryId="#EPEC_SC" />
          <ParameterList LibraryId="#EPEC_SDV" />
          <ParameterList LibraryId="#EPEC_SJCD" />
          <ParameterList LibraryId="#EPEC_SPVC" />
          <ParameterList LibraryId="#EPEC_SSCD" />
          <ParameterList LibraryId="#EPEC_CANopen">
            <Parameters>
              <Parameter Name="G_CANOPEN_NUMBER_OF_LAST_PDO_MAP" Value="8" />
              <Parameter Name="G_CANOPEN_NUMBER_OF_LAST_SRDO_MAP" Value="8" />
              <Parameter Name="G_MOTOROLA_BYTE_ORDER" Value="0" />
              <Parameter Name="G_SYSTEM_STRUCT_ALIGNMENT" Value="32" />
              <Parameter Name="G_IGNORE_INDEX_1F50H" Value="1" />
              <Parameter Name="G_IGNORE_INDEX_1F50H_TIMEOUT" Value="500" />
              <Parameter Name="G_CANOPEN_NUMBER_OF_LAST_CAN_BUS" Value="1" />
              <Parameter Name="G_CANOPEN_SLAVE_NUMBER_OF_MAPPINGS_PER_PDO" Value="8" />
            </Parameters>
          </ParameterList>
          <ParameterList LibraryId="#EPEC_ODSave" />
          <ParameterList LibraryId="#EPEC_PH" />
          <ParameterList LibraryId="#EPEC_ELT">
            <Parameters>
              <Parameter Name="G_ELT_COPYEXTEVENTS" Value="TRUE" />
              <Parameter Name="G_ELT_NO_TIMESTAMP" Value="TRUE" />
            </Parameters>
          </ParameterList>
          <ParameterList LibraryId="#EPEC_J1939">
            <Parameters>
              <Parameter Name="G_J1939_MAX_NUMBER_OF_LONG_TRANSFER" Value="2" />
              <Parameter Name="G_J1939_MAX_NUMBER_OF_FAST_TRANSFER" Value="2" />
              <Parameter Name="G_J1939_MAX_NUMBER_OF_DATA_PACKETS" Value="255" />
              <Parameter Name="G_J1939_TIMEOUT_BETWEEN_CTS_AND_DT" Value="1250" />
              <Parameter Name="G_J1939_TIMEOUT_BETWEEN_TWO_DT_MSG " Value="720" />
              <Parameter Name="G_J1939_TIMEOUT_FOR_CTS_OR_EOMA" Value="1250" />
              <Parameter Name="G_J1939_TIMEOUT_CTS_WAIT" Value="1020" />
              <Parameter Name="G_J1939_CYCLE_TIME_FOR_DT_MSG" Value="52" />
              <Parameter Name="G_J1939_TIMEOUT_FAST_TRANSFER" Value="750" />
              <Parameter Name="G_J1939_MAX_NBR_OF_RQST_CALLBACKS" Value="10" />
            </Parameters>
          </ParameterList>
          <ParameterList LibraryId="#EPEC_J1939Event">
            <Parameters>
              <Parameter Name="G_J1939EVENT_MAX_NUMBER_OF_SOURCES" Value="2" />
              <Parameter Name="G_J1939EVENT_DM1_LOGSIZE" Value="16" />
            </Parameters>
          </ParameterList>
          <ParameterList LibraryId="#EPEC_SERRLOG">
            <Parameters>
              <Parameter Name="G_ERROR_LOG_MAX_LINES" Value="50" />
            </Parameters>
          </ParameterList>
          <ParameterList LibraryId="#EPEC_ACL">
            <Parameters>
              <Parameter Name="G_ACL_MAX_NBR_OF_OWN_DEVICES" Value="1" />
              <Parameter Name="G_ACL_MAX_NBR_OF_SYSTEM_DEVICES" Value="20" />
              <Parameter Name="G_ACL_INITIAL_DELAY" Value="T#250ms" />
            </Parameters>
          </ParameterList>
          <ParameterList LibraryId="#EPEC_SA" />
          <ParameterList LibraryId="#EPEC_ISOBUS" />
          <ParameterList LibraryId="#EPEC_LIC" />
          <ParameterList LibraryId="#EPEC_J1939DM" />
          <ParameterList LibraryId="#EPEC_MachineType" />
          <ParameterList LibraryId="#EPEC_DT">
            <Parameters>
              <Parameter Name="G_DT_MAXNUMBEROFCONNECTIONS" Value="1" />
              <Parameter Name="G_DT_FRAMESONONESECOND" Value="200" />
              <Parameter Name="G_DT_MAXNUMBEROFPROTOCOLS" Value="3" />
            </Parameters>
          </ParameterList>
          <ParameterList LibraryId="#EPEC_IOD" />
          <ParameterList LibraryId="#EPEC_IODT" />
          <ParameterList LibraryId="#EPEC_EL">
            <Parameters>
              <Parameter Name="G_EL_NUMBER_OF_SOURCES" Value="1" />
              <Parameter Name="G_EL_EVENTLOGBUFFERSIZE" Value="200" />
              <Parameter Name="G_EL_PRODUCER" Value="1" />
              <Parameter Name="G_EL_MAXVISIBLELOGLINES" Value="1" />
              <Parameter Name="G_EL_COUNTOFTYPES" Value="5" />
              <Parameter Name="G_EL_SORTEDEVENTITEMCOUNT" Value="1" />
              <Parameter Name="G_EL_MAXEVENTTRANSLATORS" Value="10" />
              <Parameter Name="EL_END_OF_EVENTS" Value="1" />
              <Parameter Name="G_EL_COPYEXTEVENTS" Value="TRUE" />
              <Parameter Name="G_EL_DISABLE_NEW_LINE" Value="FALSE" />
              <Parameter Name="G_EL_EVENT_COUNTER_TYPE" Value="0" />
              <Parameter Name="G_EL_SET_EVENT_FALLING_EDGE" Value="FALSE" />
              <Parameter Name="G_EL_NUMBER_OF_READLOG_INSTANCES" Value="1" />
            </Parameters>
          </ParameterList>
        </LibraryParameters>
      </Libraries>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plcopen.org/xml/tc6_0200">
        <Folder Name="CodeTemplate" ObjectId="">
          <Folder Name="Enumerations" ObjectId="">
            <Object Name="DeviceIDs" ObjectId="" />
            <Object Name="ChannelIDs" ObjectId="" />
          </Folder>
          <Folder Name="Globals" ObjectId="">
            <Object Name="G_CAN" ObjectId="" />
            <Object Name="G_Common" ObjectId="" />
            <Object Name="G_IO" ObjectId="" />
            <Object Name="G_Logs" ObjectId="" />
            <Object Name="G_StatusFlags" ObjectId="" />
            <Object Name="G_SystemInfo" ObjectId="" />
            <Object Name="G_IODiagnostic" ObjectId="" />
            <Folder Name="CANopen_CAN1" ObjectId="">
              <Object Name="G_CANopen_CAN1" ObjectId="" />
              <Object Name="G_CANopen_CAN1_VAR" ObjectId="" />
              <Object Name="G_CAN1_VAR" ObjectId="" />
            </Folder>
          </Folder>
          <Folder Name="Constants" ObjectId="">
            <Object Name="G_CONSTANTS" ObjectId="" />
          </Folder>
          <Folder Name="Structs" ObjectId="">
            <Folder Name="CANopen" ObjectId="">
              <Object Name="IdentityObject" ObjectId="" />
            </Folder>
          </Folder>
          <Folder Name="POUs" ObjectId="">
            <Object Name="NVMemory" ObjectId="" />
            <Object Name="PLC_PRG" ObjectId="" />
            <Folder Name="Initializations" ObjectId="">
              <Object Name="Init_CAN" ObjectId="" />
              <Object Name="Init_Entry" ObjectId="" />
              <Object Name="Init_CANopen_CAN1" ObjectId="" />
              <Object Name="Init_CANopen_OD1" ObjectId="" />
              <Object Name="Init_IO" ObjectId="" />
            </Folder>
            <Folder Name="RuntimeCode" ObjectId="">
              <Object Name="Handle_Diagnostic" ObjectId="" />
              <Object Name="Handle_Firmware_Errors" ObjectId="" />
              <Object Name="Handle_CANopen_CAN1" ObjectId="" />
            </Folder>
            <Object Name="Inputs" ObjectId="" />
          </Folder>
        </Folder>
        <Object Name="Library Manager" ObjectId="" />
      </ProjectStructure>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="G_CANopen_CAN1" xmlns="http://www.plcopen.org/xml/tc6_0200">
        <variable name="Device" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.Device" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> CAN device</xhtml>
          </documentation>
        </variable>
        <variable name="OD" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.OD" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Object Dictionary data</xhtml>
          </documentation>
        </variable>
        <variable name="ODEntrys" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="70" />
              <baseType>
                <derived name="EPEC_CANopen.ODEntry" />
              </baseType>
            </array>
          </type>
          <initialValue xsi:type="ArrayValueValue" repetitionValue="70">
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="Protocols" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="5" />
              <baseType>
                <derived name="EPEC_CANopen.ProtocolEntry" />
              </baseType>
            </array>
          </type>
          <initialValue xsi:type="ArrayValueValue" repetitionValue="5">
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Protocol data</xhtml>
          </documentation>
        </variable>
        <variable name="HB" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.HBData" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Heartbeat producer/consumer protocol data</xhtml>
          </documentation>
        </variable>
        <variable name="HB_Handler" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.CANopenHB" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Heartbeat producer/consumer protocol handler</xhtml>
          </documentation>
        </variable>
        <variable name="NMT" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.NMTData" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> NMT protocol data</xhtml>
          </documentation>
        </variable>
        <variable name="NMT_Handler" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.CANopenNMT" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> NMT protocol handler</xhtml>
          </documentation>
        </variable>
        <variable name="SSDO" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.SSDOData" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> SDO server protocol data</xhtml>
          </documentation>
        </variable>
        <variable name="SSDO_Handler" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.CANopenSDOServer" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> SDO server protocol handler</xhtml>
          </documentation>
        </variable>
        <variable name="GFC" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.GFCData" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> GFC protocol data</xhtml>
          </documentation>
        </variable>
        <variable name="GFC_Handler" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.CANopenGFC" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> GFC protocol handler</xhtml>
          </documentation>
        </variable>
        <variable name="CSDOS" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="1" />
              <baseType>
                <derived name="EPEC_CANopen.CANopenCSDO" />
              </baseType>
            </array>
          </type>
          <initialValue xsi:type="ArrayValueValue">
            <arrayValue />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> SDO client instances</xhtml>
          </documentation>
        </variable>
        <variable name="AppLogDomain" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.Domain" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">16#2171 Application log domain</xhtml>
          </documentation>
        </variable>
        <variable name="SaveAll" fromAppToFw="false">
          <type>
            <derived name="EPEC_ODSave.SaveODSaveAll" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="DeleteAll" fromAppToFw="false">
          <type>
            <derived name="EPEC_ODSave.SaveODDeleteAll" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="Initialize" fromAppToFw="false">
          <type>
            <derived name="EPEC_ODSave.SaveODInitialize" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="SaveData" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="0" upper="3" />
              <baseType>
                <derived name="EPEC_ODSave.SaveODSubIndexDescription" />
              </baseType>
            </array>
          </type>
          <initialValue xsi:type="ArrayValueValue">
            <arrayValue>
              <value>
                <structValue>
                  <value member="StartIndex">
                    <simpleValue value="16#1000" />
                  </value>
                  <value member="EndIndex">
                    <simpleValue value="16#FFFF" />
                  </value>
                  <value member="GroupNum">
                    <simpleValue value="1" />
                  </value>
                </structValue>
              </value>
              <value>
                <structValue>
                  <value member="StartIndex">
                    <simpleValue value="16#1000" />
                  </value>
                  <value member="EndIndex">
                    <simpleValue value="16#1FFF" />
                  </value>
                  <value member="GroupNum">
                    <simpleValue value="1" />
                  </value>
                </structValue>
              </value>
              <value>
                <structValue>
                  <value member="StartIndex">
                    <simpleValue value="16#2000" />
                  </value>
                  <value member="EndIndex">
                    <simpleValue value="16#FFFF" />
                  </value>
                  <value member="GroupNum">
                    <simpleValue value="1" />
                  </value>
                </structValue>
              </value>
              <value>
                <structValue>
                  <value member="StartIndex">
                    <simpleValue value="16#0" />
                  </value>
                  <value member="EndIndex">
                    <simpleValue value="16#0" />
                  </value>
                  <value member="GroupNum">
                    <simpleValue value="1" />
                  </value>
                </structValue>
              </value>
            </arrayValue>
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="SaveSubData1010h" fromAppToFw="false">
          <type>
            <derived name="EPEC_ODSave.SaveODSubService" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes xmlns="">
              <Attribute Name="qualified_only" />
              <Attribute Name="global_init_slot" Value="49991" />
            </Attributes>
          </data>
        </addData>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - CANopen protocol variable definitions

</xhtml>
        </documentation>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="G_CANopen_CAN1_VAR" xmlns="http://www.plcopen.org/xml/tc6_0200">
        <variable name="OD_Error" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.Errors" />
          </type>
          <initialValue>
            <simpleValue value="EPEC_CANopen.Errors.NotInitialized" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="ODSave_Error" fromAppToFw="false">
          <type>
            <derived name="EPEC_ODSave.SaveODErrors" />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="Callback_Error" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.Errors" />
          </type>
          <initialValue>
            <simpleValue value="EPEC_CANopen.Errors.NotInitialized" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="ProtocolAdded" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="1" upper="5" />
              <baseType>
                <BOOL />
              </baseType>
            </array>
          </type>
          <initialValue xsi:type="ArrayValueValue">
            <simpleValue value="[5(0)]" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="HB_Error" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.Errors" />
          </type>
          <initialValue>
            <simpleValue value="EPEC_CANopen.Errors.NotInitialized" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="NMT_Error" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.Errors" />
          </type>
          <initialValue>
            <simpleValue value="EPEC_CANopen.Errors.NotInitialized" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="SSDO_Error" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.Errors" />
          </type>
          <initialValue>
            <simpleValue value="EPEC_CANopen.Errors.NotInitialized" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="GFC_Error" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.Errors" />
          </type>
          <initialValue>
            <simpleValue value="EPEC_CANopen.Errors.NotInitialized" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="GFC_Status" fromAppToFw="false">
          <type>
            <BYTE />
          </type>
          <initialValue>
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> GFC status</xhtml>
          </documentation>
        </variable>
        <variable name="CSDO_Error" fromAppToFw="false">
          <type>
            <derived name="EPEC_CANopen.Errors" />
          </type>
          <initialValue>
            <simpleValue value="EPEC_CANopen.Errors.NotInitialized" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <variable name="SaveSigns1010" fromAppToFw="false">
          <type>
            <array>
              <dimension lower="0" upper="3" />
              <baseType>
                <DWORD />
              </baseType>
            </array>
          </type>
          <initialValue xsi:type="ArrayValueValue">
            <simpleValue value="" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"></xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes xmlns="">
              <Attribute Name="qualified_only" />
              <Attribute Name="location" Value="16#800" />
              <Attribute Name="global_init_slot" Value="49990" />
            </Attributes>
          </data>
        </addData>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - 
 
</xhtml>
        </documentation>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="G_CAN1_VAR" xmlns="http://www.plcopen.org/xml/tc6_0200">
        <variable name="DeviceType_Device1" fromAppToFw="false">
          <type>
            <UDINT>UDINT</UDINT>
          </type>
          <initialValue>
            <simpleValue value="405" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#1000 Information about the device type</xhtml>
          </documentation>
        </variable>
        <variable name="ErrorReg_Device1" fromAppToFw="false">
          <type>
            <USINT>USINT</USINT>
          </type>
          <initialValue>
            <simpleValue value="0" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#1001 Error information</xhtml>
          </documentation>
        </variable>
        <variable name="TPDO_DUMMY" fromAppToFw="false">
          <type>
            <BYTE>BYTE</BYTE>
          </type>
          <initialValue>
            <simpleValue value="0" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#2128 PDO Dummy Variable Index</xhtml>
          </documentation>
        </variable>
        <variable name="RPDO_DUMMY" fromAppToFw="false">
          <type>
            <BYTE>BYTE</BYTE>
          </type>
          <initialValue>
            <simpleValue value="0" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#2129 PDO Dummy Variable Index</xhtml>
          </documentation>
        </variable>
        <variable name="Parameter_CSV_unique_ID" fromAppToFw="false">
          <type>
            <UINT>UINT</UINT>
          </type>
          <initialValue>
            <simpleValue value="16#0000" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#2131 Parameter CSV unique ID</xhtml>
          </documentation>
        </variable>
        <variable name="ParameterSaveStatus" fromAppToFw="false">
          <type>
            <BYTE>BYTE</BYTE>
          </type>
          <initialValue>
            <simpleValue value="0" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 16#21FA Parameter save information</xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes xmlns="">
              <Attribute Name="qualified_only" />
              <Attribute Name="location" Value="16#800" />
            </Attributes>
          </data>
        </addData>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">
NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!
 	                    
 This object is created by Epec MultiTool
 User changes are overwritten when project is imported

 Content
 - CANopen OD index data

</xhtml>
        </documentation>
      </globalVars>
    </data>
  </addData>
</project>
